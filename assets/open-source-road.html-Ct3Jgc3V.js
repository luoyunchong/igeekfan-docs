import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as o,o as n}from"./app-BGgbFL2G.js";const r={};function d(i,t){return n(),a("div",null,[...t[0]||(t[0]=[o('<h1 id="开源介绍" tabindex="-1"><a class="header-anchor" href="#开源介绍"><span>开源介绍</span></a></h1><ul><li>地址：<a href="https://github.com/luoyunchong/lin-cms-dotnetcore" target="_blank" rel="noopener noreferrer">https://github.com/luoyunchong/lin-cms-dotnetcore</a></li></ul><p>1.什么是cms？</p><p>Content Management System，内容管理系统。</p><p>2.dotnetcore是什么</p><p>.NET Core，是由Microsoft开发，<a href="http://xn--ldr31jfr8a.NET" target="_blank" rel="noopener noreferrer">目前在.NET</a> Foundation(一个非营利的开源组织)下进行管理，采用宽松的MIT协议，可构建各种软件，包括Web应用程序、移动应用程序、桌面应用程序、云服务、微服务、API、游戏和物联网应用程序</p><p>3.lin-cms 是什么</p><p>Lin-CMS 是林间有风团队经过大量项目实践所提炼出的一套内容管理系统框架。Lin-CMS 可以有效的帮助开发者提高 CMS 的开发效率, 需要前端？请访问前端仓库。官方团队产品了解请访问TaleLin</p><p>4.lin-cms-dotnetcore有哪些特点？</p><p>前后端分离，提供后端接口，更少的依赖，后续将实现模块化安装与卸载。</p><ul><li>用户管理、分组管理、分组权限管理、日志系统、文件上传等</li><li>更多功能（自定义扩展-模块系统）</li><li>博客模块，类掘金专栏，用户中心，标签、个人专栏、技术频道（首页分类）</li></ul><h2 id="设计如下" tabindex="-1"><a class="header-anchor" href="#设计如下"><span>设计如下</span></a></h2><h4 id="字典管理" tabindex="-1"><a class="header-anchor" href="#字典管理"><span>字典管理</span></a></h4><h3 id="我原本想实现这样的功能" tabindex="-1"><a class="header-anchor" href="#我原本想实现这样的功能"><span>我原本想实现这样的功能</span></a></h3><p>BaseType 1 对BaseItem多。</p><p>如：标签管理，一个文章下可以设置多个标签，原本需要设计表Tag,字段也大抵为Id,Name,Sort及关联表。<br> 我们使用BaseType、BaseItem实现。<br> BaseType中TypeCode为tag,FullName为标签，id为1时。<br> BaseItem中BaseTypeId为1，ItemCode为编码,ItemName为标签。ItemCode为不重复的字符串即可。</p><p>另Tag与Article的关联表，需要另设计一个表。</p><p>当我们要实现文章类别的下拉，原本需要设计一个表ArticleType，有字段,id,name,sort等。<br> 我们可以通过BaseType、BaseItem来实现，从而简化这些基础数据。<br> BaseType有一条数据，TypeCode为 字符串category、FullName文章类别，BaseItem存多个文章类别(Java、大数据、Python、C#等)，编码不同即可。</p><ol><li>表结构</li></ol><h4 id="base-type-字典类别管理" tabindex="-1"><a class="header-anchor" href="#base-type-字典类别管理"><span>base_type （字典类别管理）</span></a></h4><table><thead><tr><th>字段</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>int</td><td></td></tr><tr><td>type_code</td><td>varchar(50)</td><td>类别编码</td></tr><tr><td>full_name</td><td>varchar(50)</td><td>全称</td></tr><tr><td>sort_code</td><td>int</td><td>排序码</td></tr></tbody></table><h4 id="base-item-字典管理" tabindex="-1"><a class="header-anchor" href="#base-item-字典管理"><span>base_item （字典管理）</span></a></h4><table><thead><tr><th>字段</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>int</td><td></td></tr><tr><td>base_type_id</td><td>int</td><td>类别id(关联base_type的id)</td></tr><tr><td>item_code</td><td>varchar(50)</td><td>字典编码</td></tr><tr><td>item_name</td><td>varchar(50)</td><td>字典全称</td></tr><tr><td>sort_code</td><td>int</td><td>排序码</td></tr></tbody></table><h4 id="但现实总是事与愿违" tabindex="-1"><a class="header-anchor" href="#但现实总是事与愿违"><span>但现实总是事与愿违</span></a></h4><blockquote><p>后台取文章列表时，想要取出文章对应的分类，手动join时，总觉得join的表会有些奇怪。</p></blockquote><p>当然还有其他原因，<strong>局限性</strong>：</p><ol><li>比如使用了这个字典，分类需要增加一个图片字段，就不能满足要求，那怎么办呢，做不了。</li><li>比如标签需要实现这个标签下有多少个文章，通过统计也能实现，</li></ol><p>使用FreeSql实现时，如果二个表之间没有导航属性，是更复杂的。</p>',28)])])}const s=e(r,[["render",d],["__file","open-source-road.html.vue"]]),p=JSON.parse('{"path":"/dotnetcore/lin-cms/open-source-road.html","title":"开源介绍","lang":"zh-CN","frontmatter":{"description":"开源介绍 地址：https://github.com/luoyunchong/lin-cms-dotnetcore 1.什么是cms？ Content Management System，内容管理系统。 2.dotnetcore是什么 .NET Core，是由Microsoft开发，目前在.NET Foundation(一个非营利的开源组织)下进行管理...","head":[["meta",{"property":"og:url","content":"https://igeekfan.cn/igeekfan-docs/dotnetcore/lin-cms/open-source-road.html"}],["meta",{"property":"og:site_name","content":".NET 开发者指北"}],["meta",{"property":"og:title","content":"开源介绍"}],["meta",{"property":"og:description","content":"开源介绍 地址：https://github.com/luoyunchong/lin-cms-dotnetcore 1.什么是cms？ Content Management System，内容管理系统。 2.dotnetcore是什么 .NET Core，是由Microsoft开发，目前在.NET Foundation(一个非营利的开源组织)下进行管理..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-10-24T14:14:31.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-24T14:14:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开源介绍\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-10-24T14:14:31.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://igeekfan.cn/igeekfan-docs/atom.xml","title":".NET 开发者指北 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://igeekfan.cn/igeekfan-docs/feed.json","title":".NET 开发者指北 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://igeekfan.cn/igeekfan-docs/rss.xml","title":".NET 开发者指北 RSS Feed"}]]},"headers":[{"level":2,"title":"设计如下","slug":"设计如下","link":"#设计如下","children":[{"level":3,"title":"我原本想实现这样的功能","slug":"我原本想实现这样的功能","link":"#我原本想实现这样的功能","children":[]}]}],"git":{"createdTime":1582888231000,"updatedTime":1666620871000,"contributors":[{"name":"luoyunchong","email":"luoyunchong@foxmail.com","commits":5},{"name":"igeekfan","email":"luoyunchong@foxmail.com","commits":1}]},"readingTime":{"minutes":2.41,"words":724},"filePathRelative":"dotnetcore/lin-cms/open-source-road.md","localizedDate":"2020年2月28日","autoDesc":true}');export{s as comp,p as data};
