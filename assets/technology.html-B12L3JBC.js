import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as n,o as a}from"./app-CAdyq2UH.js";const i={};function l(o,e){return a(),t("div",null,e[0]||(e[0]=[n(`<h1 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈"><span>技术栈</span></a></h1><h2 id="核心技术" tabindex="-1"><a class="header-anchor" href="#核心技术"><span>核心技术</span></a></h2><ul><li><strong>后端框架</strong>：<a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 9.0 + WebAPI + RESTful</li><li><strong>数据访问</strong>：<a href="https://github.com/dotnetcore/FreeSql" target="_blank" rel="noopener noreferrer">FreeSql</a> - 支持多种数据库 <ul><li>MySQL / SqlServer / PostgreSQL / Oracle / SQLite 等</li></ul></li><li><strong>认证授权</strong>：JWT + <a href="https://github.com/IdentityServer/IdentityServer4" target="_blank" rel="noopener noreferrer">IdentityServer4</a></li><li><strong>对象映射</strong>：<a href="https://automapper.org/" target="_blank" rel="noopener noreferrer">AutoMapper</a></li><li><strong>API文档</strong>： <ul><li><a href="https://github.com/domaindrivendev/Swashbuckle.AspNetCore" target="_blank" rel="noopener noreferrer">Swagger (Swashbuckle.AspNetCore)</a></li><li><a href="https://github.com/luoyunchong/IGeekFan.AspNetCore.RapiDoc" target="_blank" rel="noopener noreferrer">RapiDoc</a></li><li><a href="https://github.com/luoyunchong/IGeekFan.AspNetCore.Knife4jUI" target="_blank" rel="noopener noreferrer">Knife4jUI</a></li></ul></li><li><strong>依赖注入</strong>：<a href="https://github.com/autofac/Autofac.Extensions.DependencyInjection" target="_blank" rel="noopener noreferrer">AutoFac</a></li><li><strong>日志框架</strong>：<a href="https://github.com/serilog/serilog-aspnetcore" target="_blank" rel="noopener noreferrer">Serilog</a></li><li><strong>模板引擎</strong>：<a href="https://github.com/lunet-io/scriban" target="_blank" rel="noopener noreferrer">Scriban</a></li></ul><h2 id="扩展功能" tabindex="-1"><a class="header-anchor" href="#扩展功能"><span>扩展功能</span></a></h2><ul><li><strong>文件存储</strong>：本地存储 + 七牛云存储 <a href="https://github.com/Hello-Mango/MQiniu.Core" target="_blank" rel="noopener noreferrer">MQiniu.Core</a></li><li><strong>分布式事务</strong>：<a href="https://github.com/dotnetcore/CAP" target="_blank" rel="noopener noreferrer">DotNetCore.CAP</a></li><li><strong>第三方登录</strong>： <ul><li><a href="https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/tree/dev/src/AspNet.Security.OAuth.GitHub" target="_blank" rel="noopener noreferrer">GitHub OAuth</a></li><li><a href="https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/tree/dev/src/AspNet.Security.OAuth.QQ" target="_blank" rel="noopener noreferrer">QQ OAuth</a></li><li><a href="https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/tree/dev/src/AspNet.Security.OAuth.Gitee" target="_blank" rel="noopener noreferrer">Gitee OAuth</a></li></ul></li><li><strong>容器化</strong>：<a href="https://docs.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a></li><li><strong>CI/CD</strong>： <ul><li><a href="https://dev.azure.com/" target="_blank" rel="noopener noreferrer">Azure DevOps</a></li><li><a href="https://help.github.com/en/actions" target="_blank" rel="noopener noreferrer">GitHub Actions</a></li></ul></li><li><strong>健康检查</strong>：<a href="https://github.com/xabaril/AspNetCore.Diagnostics.HealthChecks" target="_blank" rel="noopener noreferrer">AspNetCore.HealthChecks</a></li></ul><h2 id="架构实践" tabindex="-1"><a class="header-anchor" href="#架构实践"><span>架构实践</span></a></h2><ul><li><strong>设计模式</strong>：领域驱动设计 (DDD)</li><li><strong>代码质量</strong>：Clean Code、SOLID原则</li><li><strong>架构模式</strong>： <ul><li>仓储模式 (Repository Pattern)</li><li>关注点分离 (Separation of Concerns)</li><li>单元测试 (Xunit)</li></ul></li><li><strong>DevOps</strong>：CI/CD、自动化构建</li><li><strong>数据处理</strong>：数据库自动迁移、审计日志</li></ul><h2 id="项目分层结构" tabindex="-1"><a class="header-anchor" href="#项目分层结构"><span>项目分层结构</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>├─ src</span></span>
<span class="line"><span>│  ├─ LinCms.Web               // 接口API层 (ASP.NET Core)</span></span>
<span class="line"><span>│  ├─ LinCms.Application       // 应用服务层</span></span>
<span class="line"><span>│  ├─ LinCms.Application.Contracts // 应用服务接口与DTO</span></span>
<span class="line"><span>│  ├─ LinCms.Infrastructure    // 基础设施层，数据持久化</span></span>
<span class="line"><span>│  ├─ LinCms.Core              // 核心领域层</span></span>
<span class="line"><span>│  └─ LinCms.Plugins          // 插件模块扩展</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>└─ test</span></span>
<span class="line"><span>   └─ LinCms.Test             // 测试项目</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)]))}const c=r(i,[["render",l],["__file","technology.html.vue"]]),h=JSON.parse('{"path":"/dotnetcore/lin-cms/technology.html","title":"技术栈","lang":"zh-CN","frontmatter":{"description":"技术栈 核心技术 后端框架：ASP.NET Core 9.0 + WebAPI + RESTful 数据访问：FreeSql - 支持多种数据库 MySQL / SqlServer / PostgreSQL / Oracle / SQLite 等 认证授权：JWT + IdentityServer4 对象映射：AutoMapper API文档： Swa...","head":[["meta",{"property":"og:url","content":"https://igeekfan.cn/igeekfan-docs/dotnetcore/lin-cms/technology.html"}],["meta",{"property":"og:site_name","content":".NET 开发者指北"}],["meta",{"property":"og:title","content":"技术栈"}],["meta",{"property":"og:description","content":"技术栈 核心技术 后端框架：ASP.NET Core 9.0 + WebAPI + RESTful 数据访问：FreeSql - 支持多种数据库 MySQL / SqlServer / PostgreSQL / Oracle / SQLite 等 认证授权：JWT + IdentityServer4 对象映射：AutoMapper API文档： Swa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-28T14:32:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-28T14:32:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"技术栈\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-28T14:32:13.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://igeekfan.cn/igeekfan-docs/atom.xml","title":".NET 开发者指北 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://igeekfan.cn/igeekfan-docs/feed.json","title":".NET 开发者指北 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://igeekfan.cn/igeekfan-docs/rss.xml","title":".NET 开发者指北 RSS Feed"}]]},"headers":[{"level":2,"title":"核心技术","slug":"核心技术","link":"#核心技术","children":[]},{"level":2,"title":"扩展功能","slug":"扩展功能","link":"#扩展功能","children":[]},{"level":2,"title":"架构实践","slug":"架构实践","link":"#架构实践","children":[]},{"level":2,"title":"项目分层结构","slug":"项目分层结构","link":"#项目分层结构","children":[]}],"git":{"createdTime":1588916791000,"updatedTime":1745850733000,"contributors":[{"name":"igeekfan","email":"igeekfan@foxmail.com","commits":3},{"name":"luoyunchong","email":"luoyunchong@foxmail.com","commits":3},{"name":"igeekfan","email":"luoyunchong@foxmail.com","commits":2}]},"readingTime":{"minutes":0.99,"words":297},"filePathRelative":"dotnetcore/lin-cms/technology.md","localizedDate":"2020年5月8日","autoDesc":true}');export{c as comp,h as data};
