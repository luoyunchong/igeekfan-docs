import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as r,o as a}from"./app-CU_36ULm.js";const i={};function n(l,t){return a(),e("div",null,t[0]||(t[0]=[r('<h1 id="基于-rbac-实现权限设计" tabindex="-1"><a class="header-anchor" href="#基于-rbac-实现权限设计"><span>基于 RBAC 实现权限设计</span></a></h1><p>功能：实现一个用户设置多个分组，分组可以设置多个权限，权限与后台 API 方法对应，前端菜单绑定权限编码，前端按钮绑定权限编码，从而实现用户可配置权限，从而控制界面上的元素等。</p><h3 id="_1-用户表-lin-user" tabindex="-1"><a class="header-anchor" href="#_1-用户表-lin-user"><span>1. 用户表 lin_user</span></a></h3><table><thead><tr><th>字段</th><th>备注</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>主键 Id</td><td>bigint</td></tr><tr><td>username</td><td>用户名</td><td>varchar</td></tr><tr><td>nickname</td><td>昵称</td><td>varchar</td></tr><tr><td>phone_number</td><td>手机号</td><td>varchar</td></tr><tr><td>avatar</td><td>用户默认生成图像，为 null、头像 url</td><td>varchar</td></tr><tr><td>email</td><td>电子邮箱</td><td>varchar</td></tr><tr><td>active</td><td>1 激活 2 非激活</td><td>int</td></tr></tbody></table><h3 id="_2-分组表-lin-group" tabindex="-1"><a class="header-anchor" href="#_2-分组表-lin-group"><span>2. 分组表 lin_group</span></a></h3><table><thead><tr><th>字段</th><th>备注</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>主键 Id</td><td>bigint</td></tr><tr><td>name</td><td>权限组名称</td><td>varchar</td></tr><tr><td>info</td><td>权限组描述</td><td>varchar</td></tr><tr><td>is_static</td><td>是否是静态分组</td><td>bit</td></tr></tbody></table><h3 id="_3-用户分组表-lin-user-group" tabindex="-1"><a class="header-anchor" href="#_3-用户分组表-lin-user-group"><span>3. 用户分组表 lin_user_group</span></a></h3><p>用户分组表。用于用户和分组表的关联。可配置一个用户属于多个分组。</p><table><thead><tr><th>字段</th><th>备注</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>主键 Id</td><td>bigint</td></tr><tr><td>user_id</td><td>用户 ID</td><td>bigint</td></tr><tr><td>group_id</td><td>分组 ID</td><td>bigint</td></tr></tbody></table><h3 id="_4-权限表-lin-permission" tabindex="-1"><a class="header-anchor" href="#_4-权限表-lin-permission"><span>4. 权限表 lin_permission</span></a></h3><p>权限表，本系统通过反射在系统初次启动时，启动异步任务，将不存在的权限新增到此表中。</p><table><thead><tr><th>字段</th><th>备注</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>主键 Id</td><td>bigint</td></tr><tr><td>module</td><td>权限所属模块，例如：人员管理</td><td>varchar</td></tr><tr><td>name</td><td>所属权限、权限名称，例如：访问首页</td><td>varchar</td></tr></tbody></table><h3 id="_5-分组权限表-lin-group-permission" tabindex="-1"><a class="header-anchor" href="#_5-分组权限表-lin-group-permission"><span>5. 分组权限表 lin_group_permission</span></a></h3><p>分组权限表，用于分组与权限表的关联</p><table><thead><tr><th>字段</th><th>备注</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>主键 Id</td><td>bigint</td></tr><tr><td>group_id</td><td>分组 Id</td><td>bigint</td></tr><tr><td>permission_id</td><td>权限 Id</td><td>bigint</td></tr></tbody></table><h3 id="_6-用户身份认证登录表-lin-user-identity" tabindex="-1"><a class="header-anchor" href="#_6-用户身份认证登录表-lin-user-identity"><span>6. 用户身份认证登录表 lin_user_identity</span></a></h3><p>用户授权信息表，用于存储不同登录类型的用户信息，如手机号、邮件、用户名、第三方应用（微信、QQ、GitHub）的登录</p><table><thead><tr><th>字段</th><th>备注</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>char</td><td>主键 Id</td></tr><tr><td>identity_type</td><td>varchar</td><td>认证类型 Password，GitHub、QQ、WeiXin 等</td></tr><tr><td>identifier</td><td>varchar</td><td>认证者，例如 用户名,手机号，邮件等，</td></tr><tr><td>credential</td><td>varchar</td><td>凭证，例如 密码,存 OpenId、Id，同一 IdentityType 的 OpenId 的值是唯一的</td></tr><tr><td>create_user_id</td><td>bigint</td><td>绑定的用户 Id</td></tr><tr><td>create_time</td><td>datetime</td><td></td></tr></tbody></table><h2 id="字典管理" tabindex="-1"><a class="header-anchor" href="#字典管理"><span>字典管理</span></a></h2><p>主要功能：仅限于通用的下拉列表选择，有变化的可能性。抽象成统一的配置项。</p><p>比如：文章是（原创，转载，翻译),性别是（男，女）。当然更多，在下文会有介绍。</p><h3 id="_1-base-type-字典类别管理" tabindex="-1"><a class="header-anchor" href="#_1-base-type-字典类别管理"><span>1.base_type （字典类别管理）</span></a></h3><table><thead><tr><th>字段</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>int</td><td></td></tr><tr><td>type_code</td><td>varchar(50)</td><td>类别编码</td></tr><tr><td>full_name</td><td>varchar(50)</td><td>全称</td></tr><tr><td>sort_code</td><td>int</td><td>排序码</td></tr></tbody></table><h3 id="_2-base-item-字典管理" tabindex="-1"><a class="header-anchor" href="#_2-base-item-字典管理"><span>2.base_item （字典管理）</span></a></h3><table><thead><tr><th>字段</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>int</td><td></td></tr><tr><td>base_type_id</td><td>int</td><td>类别 id(关联 base_type 的 id)</td></tr><tr><td>item_code</td><td>varchar(50)</td><td>字典编码</td></tr><tr><td>item_name</td><td>varchar(50)</td><td>字典全称</td></tr><tr><td>sort_code</td><td>int</td><td>排序码</td></tr></tbody></table><p>BaseType 1 对 BaseItem 多。</p><p>如：标签管理，一个文章下可以设置多个标签，原本需要设计表 Tag,字段也大抵为 Id,Name,Sort 及关联表。<br> 我们使用 BaseType、BaseItem 实现。<br> BaseType 中 TypeCode 为 tag,FullName 为标签，id 为 1 时。<br> BaseItem 中 BaseTypeId 为 1，ItemCode 为编码,ItemName 为标签。ItemCode 为不重复的字符串即可。</p><p>另 Tag 与 Article 的关联表，需要另设计一个表。</p><p>当我们要实现文章类别的下拉，原本需要设计一个表 ArticleType，有字段,id,name,sort 等。<br> 我们可以通过 BaseType、BaseItem 来实现，从而简化这些基础数据。<br> BaseType 有一条数据，TypeCode 为 字符串 category、FullName 文章类别，BaseItem 存多个文章类别(Java、大数据、Python、C#等)，编码不同即可。</p><p><strong>但现实总是事与愿违</strong>,后台取文章列表时，想要取出文章对应的分类，手动 join 时，总觉得 join 的表会有些奇怪。</p><p>当然还有其他原因，<strong>局限性</strong>：</p><ol><li>比如使用了这个字典，分类需要增加一个图片字段，就不能满足要求，那怎么办呢，做不了。</li><li>比如标签需要实现这个标签下有多少个文章，通过统计也能实现，</li></ol><p>使用 FreeSql 实现时，如果二个表之间没有导航属性，是更复杂的。</p><h3 id="lin-file-文件存储" tabindex="-1"><a class="header-anchor" href="#lin-file-文件存储"><span>lin_file 文件存储</span></a></h3><table><thead><tr><th>字段</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>bigint</td><td>主键 Id</td></tr><tr><td>extension</td><td>varchar</td><td>后缀</td></tr><tr><td>md5</td><td>varchar</td><td>图片 md5 值，防止上传重复图片</td></tr><tr><td>name</td><td>varchar</td><td>名称</td></tr><tr><td>path</td><td>varchar</td><td>路径</td></tr><tr><td>size</td><td>bigint</td><td>大小</td></tr><tr><td>type</td><td>smallint</td><td>1 local，2 代表七牛云 3 其他表示其他地方</td></tr><tr><td>create_user_id</td><td>bigint</td><td>创建者 ID</td></tr></tbody></table><h3 id="lin-log-日志记录" tabindex="-1"><a class="header-anchor" href="#lin-log-日志记录"><span>lin_log 日志记录</span></a></h3><table><thead><tr><th>字段</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>bigint</td><td>主键 Id</td></tr><tr><td>authority</td><td>varchar</td><td>访问哪个权限</td></tr><tr><td>message</td><td>varchar</td><td>日志信息</td></tr><tr><td>method</td><td>varchar</td><td>请求方法</td></tr><tr><td>path</td><td>varchar</td><td>请求路径</td></tr><tr><td>status_code</td><td>int</td><td>请求的 http 返回码</td></tr><tr><td>time</td><td>datetime</td><td>日志创建时间</td></tr><tr><td>user_id</td><td>bigint</td><td>用户 id</td></tr><tr><td>user_name</td><td>varchar</td><td>用户当时的昵称</td></tr><tr><td>other_message</td><td>longtext</td><td></td></tr></tbody></table>',37)]))}const o=d(i,[["render",n],["__file","table.html.vue"]]),p=JSON.parse('{"path":"/dotnetcore/lin-cms/table.html","title":"基于 RBAC 实现权限设计","lang":"zh-CN","frontmatter":{"description":"基于 RBAC 实现权限设计 功能：实现一个用户设置多个分组，分组可以设置多个权限，权限与后台 API 方法对应，前端菜单绑定权限编码，前端按钮绑定权限编码，从而实现用户可配置权限，从而控制界面上的元素等。 1. 用户表 lin_user 2. 分组表 lin_group 3. 用户分组表 lin_user_group 用户分组表。用于用户和分组表的关...","head":[["meta",{"property":"og:url","content":"https://igeekfan.cn/igeekfan-docs/dotnetcore/lin-cms/table.html"}],["meta",{"property":"og:site_name","content":".NET 开发者指北"}],["meta",{"property":"og:title","content":"基于 RBAC 实现权限设计"}],["meta",{"property":"og:description","content":"基于 RBAC 实现权限设计 功能：实现一个用户设置多个分组，分组可以设置多个权限，权限与后台 API 方法对应，前端菜单绑定权限编码，前端按钮绑定权限编码，从而实现用户可配置权限，从而控制界面上的元素等。 1. 用户表 lin_user 2. 分组表 lin_group 3. 用户分组表 lin_user_group 用户分组表。用于用户和分组表的关..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-07T06:27:23.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-07T06:27:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基于 RBAC 实现权限设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-07T06:27:23.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://igeekfan.cn/igeekfan-docs/atom.xml","title":".NET 开发者指北 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://igeekfan.cn/igeekfan-docs/feed.json","title":".NET 开发者指北 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://igeekfan.cn/igeekfan-docs/rss.xml","title":".NET 开发者指北 RSS Feed"}]]},"headers":[{"level":3,"title":"1. 用户表 lin_user","slug":"_1-用户表-lin-user","link":"#_1-用户表-lin-user","children":[]},{"level":3,"title":"2. 分组表 lin_group","slug":"_2-分组表-lin-group","link":"#_2-分组表-lin-group","children":[]},{"level":3,"title":"3. 用户分组表 lin_user_group","slug":"_3-用户分组表-lin-user-group","link":"#_3-用户分组表-lin-user-group","children":[]},{"level":3,"title":"4. 权限表 lin_permission","slug":"_4-权限表-lin-permission","link":"#_4-权限表-lin-permission","children":[]},{"level":3,"title":"5. 分组权限表 lin_group_permission","slug":"_5-分组权限表-lin-group-permission","link":"#_5-分组权限表-lin-group-permission","children":[]},{"level":3,"title":"6. 用户身份认证登录表 lin_user_identity","slug":"_6-用户身份认证登录表-lin-user-identity","link":"#_6-用户身份认证登录表-lin-user-identity","children":[]},{"level":2,"title":"字典管理","slug":"字典管理","link":"#字典管理","children":[{"level":3,"title":"1.base_type （字典类别管理）","slug":"_1-base-type-字典类别管理","link":"#_1-base-type-字典类别管理","children":[]},{"level":3,"title":"2.base_item （字典管理）","slug":"_2-base-item-字典管理","link":"#_2-base-item-字典管理","children":[]},{"level":3,"title":"lin_file 文件存储","slug":"lin-file-文件存储","link":"#lin-file-文件存储","children":[]},{"level":3,"title":"lin_log 日志记录","slug":"lin-log-日志记录","link":"#lin-log-日志记录","children":[]}]}],"git":{"createdTime":1589368688000,"updatedTime":1704608843000,"contributors":[{"name":"igeekfan","email":"igeekfan@foxmail.com","commits":2},{"name":"luoyunchong","email":"luoyunchong@foxmail.com","commits":2},{"name":"igeekfan","email":"luoyunchong@foxmail.com","commits":1}]},"readingTime":{"minutes":3.78,"words":1135},"filePathRelative":"dotnetcore/lin-cms/table.md","localizedDate":"2020年5月13日","autoDesc":true}');export{o as comp,p as data};
