import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,c as o,a as n,b as a,F as c,d as l,e as p,o as u}from"./app.11b11601.js";const i={},r=l(`<h1 id="c-\u59D4\u6258\u7684\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#c-\u59D4\u6258\u7684\u4ECB\u7ECD" aria-hidden="true">#</a> C#\u59D4\u6258\u7684\u4ECB\u7ECD</h1><h2 id="c-\u59D4\u6258\u7684\u4ECB\u7ECD-delegate\u3001action\u3001func\u3001predicate" tabindex="-1"><a class="header-anchor" href="#c-\u59D4\u6258\u7684\u4ECB\u7ECD-delegate\u3001action\u3001func\u3001predicate" aria-hidden="true">#</a> C#\u59D4\u6258\u7684\u4ECB\u7ECD(delegate\u3001Action\u3001Func\u3001predicate)</h2><p>\u59D4\u6258\u662F\u4E00\u4E2A\u7C7B\uFF0C\u5B83\u5B9A\u4E49\u4E86\u65B9\u6CD5\u7684\u7C7B\u578B\uFF0C\u4F7F\u5F97\u53EF\u4EE5\u5C06\u65B9\u6CD5\u5F53\u4F5C\u53E6\u4E00\u4E2A\u65B9\u6CD5\u7684\u53C2\u6570\u6765\u8FDB\u884C\u4F20\u9012\u3002\u4E8B\u4EF6\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u59D4\u6258\u3002</p><p>\u7C7B\u4F3C c++\u7684\u51FD\u6570\u6307\u9488\uFF0C\u4F46\u662F\u4ED6\u662F\u7C7B\u578B\u5B89\u5168\u7684\uFF0C</p><ol><li>\u5141\u8BB8\u5C06\u65B9\u6CD5\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u3002</li><li>\u53EF\u7528\u4E8E\u5B9A\u4E49\u56DE\u8C03\u65B9\u6CD5\u3002</li><li>\u59D4\u6258\u53EF\u4EE5\u94FE\u63A5\u5728\u4E00\u8D77\u3002\u4F8B\u5982\uFF0C\u53EF\u4EE5\u5BF9\u4E00\u4E2A\u4E8B\u4EF6\u8C03\u7528\u591A\u4E2A\u65B9\u6CD5\u3002</li></ol><h2 id="delegate" tabindex="-1"><a class="header-anchor" href="#delegate" aria-hidden="true">#</a> delegate</h2><p>\u59D4\u6258\u7684\u5173\u952E\u5B57\u662F <strong>delegate</strong>,\u4E00\u4E2A\u59D4\u6258\u76F8\u5F53\u4E8E\u4E00\u4E2A\u65B0\u7684\u7C7B\uFF0C\u53EF\u4F7F\u7528\u8BBF\u95EE\u4FEE\u9970\u7B26 public\u3001private\u3001protected \u7B49\uFF0C\u4F5C\u7528\u57DF\u540C\u7C7B\u7684\u4FEE\u9970\u7B26.</p><p>\u5B9A\u4E49\u4E86\u59D4\u6258\u7C7B\u578B\u4E0E\u53C2\u6570,\u4F7F\u5F97\u53EF\u4EE5\u5C06\u65B9\u6CD5\u5F53\u4F5C\u53E6\u4E00\u4E2A\u65B9\u6CD5\u53C2\u6570\u6765\u4F20\u9012\u3002\u4E8B\u4EF6\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u59D4\u6258\u3002</p><p>Delegate \u81F3\u5C11 0 \u4E2A\u53C2\u6570\uFF0C\u81F3\u591A 32 \u4E2A\u53C2\u6570\uFF0C\u53EF\u4EE5\u65E0\u8FD4\u56DE\u503C\uFF0C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u59D4\u6258\uFF0C\u6709\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5E76\u8FD4\u56DE Int \u7C7B\u578B\u7684\u503C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">delegate</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">CalculateMethodInvoker</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> a<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5B9A\u4E49\u65B9\u6CD5,\u65B9\u6CD5\u53C2\u6570\u4E0E\u8FD4\u56DE\u503C\u4E0E\u59D4\u6258\u4FDD\u6301\u4E00\u81F4</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CalculateHelper</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">Sum</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">Multiply</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8C03\u7528</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">Program</span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">CalculateMethodInvoker</span> calculateSumInvoker <span class="token operator">=</span> CalculateHelper<span class="token punctuation">.</span>Sum<span class="token punctuation">;</span>
        <span class="token class-name">CalculateMethodInvoker</span> calculateSumInvoker2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CalculateMethodInvoker</span><span class="token punctuation">(</span>CalculateHelper<span class="token punctuation">.</span>Sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5B9E\u4F8B\u5316\u4E00\u4E2A\u59D4\u6258</span>
        <span class="token class-name">CalculateMethodInvoker</span> calculateMultiplyInvoker <span class="token operator">=</span> CalculateHelper<span class="token punctuation">.</span>Multiply<span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">int</span></span> x <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">int</span></span> addResult <span class="token operator">=</span> <span class="token function">calculateSumInvoker</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> addResult2 <span class="token operator">=</span> <span class="token function">calculateSumInvoker2</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> invokeResult <span class="token operator">=</span> calculateSumInvoker<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>

        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;x,y\u76F8\u52A0\uFF0C\u5F97\u5230</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">addResult</span><span class="token punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">addResult2</span><span class="token punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">invokeResult</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;x,y\u76F8\u4E58\uFF0C\u5F97\u5230</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token function">calculateMultiplyInvoker</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Console<span class="token punctuation">.</span><span class="token function">ReadKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u4E00\u4E2A\u59D4\u6258\u53EF\u4EE5\u5C06\u591A\u4E2A\u65B9\u6CD5\u94FE\u63A5\u5728\u4E00\u8D77\u3002\u4E5F\u53EF\u4EE5\u79FB\u9664\u67D0\u4E2A\u65B9\u6CD5</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ContactDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">CalculateMethodInvoker</span> calculateInvoker <span class="token operator">=</span> CalculateHelper<span class="token punctuation">.</span>Sum<span class="token punctuation">;</span>
    calculateInvoker <span class="token operator">+=</span> CalculateHelper<span class="token punctuation">.</span>Multiply<span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">int</span></span> r1 <span class="token operator">=</span> <span class="token function">calculateInvoker</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ContactDelegate:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">r1</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    calculateInvoker <span class="token operator">-=</span> CalculateHelper<span class="token punctuation">.</span>Multiply<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> r2 <span class="token operator">=</span> <span class="token function">calculateInvoker</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ContactDelegate:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">r2</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="action" tabindex="-1"><a class="header-anchor" href="#action" aria-hidden="true">#</a> Action</h2><p>Action \u662F\u65E0\u8FD4\u56DE\u503C\u7684\u6CDB\u578B\u59D4\u6258\u3002\u7279\u70B9\u662F\uFF1A\u81F3\u5C11 0 \u4E2A\u53C2\u6570\uFF0C\u81F3\u591A 16 \u4E2A\u53C2\u6570\uFF0C\u65E0\u8FD4\u56DE\u503C\u3002</p><ol><li>\u8C03\u7528\u65B9\u6CD5\u3001\u53EF\u4EE5\u4F20\u5165\u53C2\u6570</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ActionParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> action <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>Sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">action</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Sum</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;x+y=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> y</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li>\u4F7F\u7528 lambda \u8868\u8FBE\u5F0F</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ActionLambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> action <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;x+y=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x <span class="token operator">+</span> y</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">action</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="func" tabindex="-1"><a class="header-anchor" href="#func" aria-hidden="true">#</a> Func</h2><p>Func \u662F\u6709\u8FD4\u56DE\u503C\u7684\u6CDB\u578B\u59D4\u6258\uFF0CFunc \u7279\u70B9\uFF1A\u81F3\u5C11 0 \u4E2A\u53C2\u6570\uFF0C\u81F3\u591A 16 \u4E2A\u53C2\u6570\uFF0C\u6839\u636E\u8FD4\u56DE\u503C\u6CDB\u578B\u8FD4\u56DE\u3002\u5FC5\u987B\u6709\u8FD4\u56DE\u503C\uFF0C\u4E0D\u53EF void</p><p><code>Func&lt;int</code>&gt; \u8868\u793A\u65E0\u53C2\uFF0C\u8FD4\u56DE\u503C\u4E3A int \u7684\u59D4\u6258</p><p><code>Func&lt;int, int, string&gt;</code> \u8868\u793A\u4F20\u5165\u53C2\u6570\u4E3A int, int\u3002 \u8FD4\u56DE\u503C\u4E3A string \u7684\u59D4\u6258</p><p>1.\u8C03\u7528\u65B9\u6CD5\uFF0C\u4F20\u5165\u53C2\u6570</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">FuncMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Func<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> fc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Func<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>CalculateHelper<span class="token punctuation">.</span>Sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> result <span class="token operator">=</span> <span class="token function">fc1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8C03\u7528\u59D4\u6258</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>2.\u4F7F\u7528 lambda</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">FuncLambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Func<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> fc <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> r <span class="token operator">=</span> <span class="token function">fc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="predicate" tabindex="-1"><a class="header-anchor" href="#predicate" aria-hidden="true">#</a> Predicate</h2><p>predicate \u662F\u8FD4\u56DE bool \u578B\u7684\u6CDB\u578B\u59D4\u6258</p><p><code>predicate&lt;int&gt;</code> \u8868\u793A\u4F20\u5165\u53C2\u6570\u4E3A int \u8FD4\u56DE bool \u7684\u59D4\u6258</p><p>Predicate \u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u8FD4\u56DE\u503C\u56FA\u5B9A\u4E3A bool</p><p>1\u3001\u4F7F\u7528\u5355\u884C lambda,\u5E26\u62EC\u53F7\u7684 lambda\uFF08\u53EF\u591A\u884C\u4EE3\u7801\uFF09\uFF0C\u72EC\u7ACB\u7684\u65B9\u6CD5\u3002\u90FD\u8FD4\u56DE bool \u7C7B\u578B\u7684\u503C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PredicateBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Point<span class="token punctuation">[</span><span class="token punctuation">]</span></span> points <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">375</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">275</span><span class="token punctuation">,</span> <span class="token number">395</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">295</span><span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">Predicate<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span> predicate1 <span class="token operator">=</span> p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>X <span class="token operator">*</span> p<span class="token punctuation">.</span>Y <span class="token operator">&gt;</span> <span class="token number">100000</span><span class="token punctuation">;</span>
    <span class="token class-name">Predicate<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span> predicate2 <span class="token operator">=</span> p <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>X <span class="token operator">*</span> p<span class="token punctuation">.</span>Y <span class="token operator">&gt;</span> <span class="token number">100000</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">Point</span> first <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> ProductGT10<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Point</span> p1 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> predicate1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Point</span> p2 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> predicate2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Found: X = {0}, Y = {1}&quot;</span><span class="token punctuation">,</span> first<span class="token punctuation">.</span>X<span class="token punctuation">,</span> first<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Found: X = {0}, Y = {1}&quot;</span><span class="token punctuation">,</span> p1<span class="token punctuation">.</span>X<span class="token punctuation">,</span> p1<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Found: X = {0}, Y = {1}&quot;</span><span class="token punctuation">,</span> p2<span class="token punctuation">.</span>X<span class="token punctuation">,</span> p2<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">ReadKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ProductGT10</span><span class="token punctuation">(</span><span class="token class-name">Point</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>X <span class="token operator">*</span> p<span class="token punctuation">.</span>Y <span class="token operator">&gt;</span> <span class="token number">100000</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>Array.Find \u65B9\u6CD5\uFF0C\u4F7F\u7528 Predicate \u59D4\u6258\u641C\u7D22 Point \u7ED3\u6784\u7684\u6570\u7EC4\uFF0C\u53EA\u6709\u662F x \u548C y \u5B57\u6BB5\u7684\u4E58\u79EF\u5927\u4E8E 100000,\u65B9\u6CD5 ProductGT10 \u8FD4\u56DE true,\u627E\u5230\u7B26\u5408\u8981\u6C42\u7684\u5143\u7D20\u540E\u505C\u6B62\u3002</p><h2 id="\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6" aria-hidden="true">#</a> \u4E8B\u4EF6</h2><p><strong>\u4E8B\u4EF6\u81EA\u8EAB\u5C31\u662F\u59D4\u6258\u7C7B\u578B</strong>\uFF0C\u7531\u4E8E\u59D4\u6258\u53EF\u4EE5\u7ED1\u5B9A\u8C03\u7528\u591A\u4E2A\u65B9\u6CD5\uFF0C\u8FD9\u4F1A\u7ED9\u4E8B\u4EF6\u7684\u5904\u7406\u5E26\u6765\u65B9\u4FBF \u3002\u7C7B\u53EA\u9700\u8981\u5BF9\u5916\u516C\u5F00\u4E8B\u4EF6\uFF0C\u5C31\u53EF\u4EE5\u4E0E\u5916\u90E8\u7684\u5176\u4ED6\u5730\u65B9\u5173\u8054\uFF0C\u4ECE\u800C\u5B9E\u73B0\u4E8B\u4EF6\u8BA2\u9605\u3002</p><p>1.\u7531\u4E8E\u4E0D\u540C\u7684\u4E8B\u4EF6\u8981\u4F20\u9012\u7684\u53C2\u6570\u4E0D\u540C\uFF0C\u6211\u4EEC\u901A\u8FC7\u7EE7\u627F EventArgs\uFF0C</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KeyPressEventArgs</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">EventArgs</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ConsoleKey</span> PressdKey <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">KeyPressEventArgs</span><span class="token punctuation">(</span><span class="token class-name">ConsoleKey</span> consoleKey<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>PressdKey <span class="token operator">=</span> consoleKey<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>2.\u5E26\u6709\u6CDB\u578B\u53C2\u6570\u7684\u4E8B\u4EF6\u5904\u7406\u59D4\u6258\u3002</p><p>\u7CFB\u7EDF\u51FD\u6570\u5185\u7F6E\u5982\u4E0B\u59D4\u6258</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">delegate</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">EventHandler</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TEventArgs<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span><span class="token class-name">TEventArgs</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>   TEventArgs \u662F\u4E00\u4E2A\u6CDB\u578B\u53C2\u6570
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">App</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">EventHandler<span class="token punctuation">&lt;</span>KeyPressEventArgs<span class="token punctuation">&gt;</span></span> KeyPressed<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnSpaceKeyPressed</span><span class="token punctuation">(</span><span class="token class-name">KeyPressEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        KeyPressed<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">StartRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">ConsoleKeyInfo</span> keyInfo <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>keyInfo<span class="token punctuation">.</span>Key <span class="token operator">==</span> ConsoleKey<span class="token punctuation">.</span>Spacebar<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token function">OnSpaceKeyPressed</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">KeyPressEventArgs</span><span class="token punctuation">(</span>keyInfo<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>keyInfo<span class="token punctuation">.</span>Key <span class="token operator">==</span> ConsoleKey<span class="token punctuation">.</span>Escape<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">Program</span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A7A\u683C\uFF1A\u8F93\u5165\u5F53\u524D\u65F6\u95F4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;ESC:\u9000\u51FA\u7CFB\u7EDF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">App</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        app<span class="token punctuation">.</span>KeyPressed <span class="token operator">+=</span> MyApp_SpaceKeyPressed<span class="token punctuation">;</span>
        app<span class="token punctuation">.</span><span class="token function">StartRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MyApp_SpaceKeyPressed</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span><span class="token class-name">KeyPressEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToLongTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">\u6309\u4E0B\u7A7A\u683C\u952E,</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>PressdKey<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,48),k={href:"https://www.cnblogs.com/akwwl/p/3232679.html",target:"_blank",rel:"noopener noreferrer"},b=p("C#\u59D4\u6258\u7684\u4ECB\u7ECD(delegate\u3001Action\u3001Func\u3001predicate)"),d={href:"https://www.cnblogs.com/hjxzjp/p/7667536.html",target:"_blank",rel:"noopener noreferrer"},m=p("c# \u5B9A\u4E49\u59D4\u6258\u548C\u4F7F\u7528\u59D4\u6258\uFF08\u4E8B\u4EF6\u7684\u4F7F\u7528\uFF09");function y(g,w){const s=e("ExternalLinkIcon");return u(),o(c,null,[r,n("ul",null,[n("li",null,[n("a",k,[b,a(s)])]),n("li",null,[n("a",d,[m,a(s)])])])],64)}var f=t(i,[["render",y],["__file","delegate.html.vue"]]);export{f as default};
