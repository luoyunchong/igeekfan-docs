import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{c as o,a as n,b as t,e as s,d as e,r as l,o as c}from"./app.a4b121e2.js";const p={},u=s("\u4F7F\u7528 "),r={href:"http://SPA+.NET",target:"_blank",rel:"noopener noreferrer"},d=s("SPA+.NET"),v=s(" Core3.1 \u5B9E\u73B0 GitHub \u7B2C\u4E09\u65B9\u6388\u6743\u767B\u5F55 \u7C7B\u4F3C\u4F7F\u7528 AspNet.Security.OAuth.GitHub\uFF0C\u524D\u7AEF\u4F7F\u7528\u5982\u4E0B\uFF1AVUE+Vue-Router+axios"),b=n("h2",{id:"aspnet-security-oauth-github",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#aspnet-security-oauth-github","aria-hidden":"true"},"#"),s(" AspNet.Security.OAuth.GitHub")],-1),m=s("GitHub "),k={href:"https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers",target:"_blank",rel:"noopener noreferrer"},h=s("https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers"),g=n("h2",{id:"github-\u6388\u6743\u767B\u5F55",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#github-\u6388\u6743\u767B\u5F55","aria-hidden":"true"},"#"),s(" GitHub \u6388\u6743\u767B\u5F55")],-1),_=n("p",null,"\u4EC0\u4E48\u914D\u7F6E\u7684\u8FC7\u7A0B\u4E0D\u8BF4\u4E86\u3002\u3002\u6709\u4E00\u63A8\u3002",-1),q={href:"https://www.jianshu.com/p/78d186aeb526",target:"_blank",rel:"noopener noreferrer"},x=s("GitHub \u7B2C\u4E09\u65B9\u767B\u5F55"),f={href:"https://juejin.im/post/5dfb04cee51d45583a66c2f3",target:"_blank",rel:"noopener noreferrer"},y=s("\u7ED9\u4F60\u7684\u7F51\u7AD9\u6DFB\u52A0\u7B2C\u4E09\u65B9\u767B\u5F55\u4EE5\u53CA\u77ED\u4FE1\u9A8C\u8BC1\u529F\u80FD"),C=e(`<p>\u4E0B\u9762\u4E3A\u793A\u4F8B</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client_id:0be6b05fc717bfc4fb67
client_secret:xxxxxxxxxxxxxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Get</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>https://github.com/login/oauth/authorize?client_id=0be6b05fc717bfc4fb67&amp;redirect_uri=https://localhost:5001/signin-github
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F1A\u91CD\u5B9A\u5411\u5230</p>`,5),A={href:"https://localhost:5001/signin-github?code=07537a84d12bbae08361",target:"_blank",rel:"noopener noreferrer"},w=s("https://localhost:5001/signin-github?code=07537a84d12bbae08361"),I=e(`<p>\u8FD9\u4E2A code \u653E\u5230\u4E0B\u9762\u7684\u8BF7\u6C42\u4E2D\uFF0C\u83B7\u53D6 access_token POST \u65B9\u5F0F\uFF08PostMan \u53BB\u8BF7\u6C42\uFF09</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>https://github.com/login/oauth/access_token?client_id=0be6b05fc717bfc4fb67&amp;client_secret=xxxxxxxxxxxxxxx&amp;code=07537a84d12bbae08361
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Get \u65B9\u5F0F</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>https://api.github.com/user?access_token=787506afa3271d077b98f18af56d7cfdc8db43b4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\u5C31\u80FD\u83B7\u53D6\u7528\u6237\u4FE1\u606F</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;login&quot;</span><span class="token operator">:</span> <span class="token string">&quot;luoyunchong&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">18613266</span><span class="token punctuation">,</span>
  <span class="token property">&quot;node_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MDQ6VXNlcjE4NjEzMjY2&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;avatar_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://avatars1.githubusercontent.com/u/18613266?v=4&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;gravatar_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;html_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://github.com/luoyunchong&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;followers_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/followers&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;following_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/following{/other_user}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;gists_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/gists{/gist_id}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;starred_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/starred{/owner}{/repo}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subscriptions_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/subscriptions&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;organizations_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/orgs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;repos_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/repos&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;events_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/events{/privacy}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;received_events_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/users/luoyunchong/received_events&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;site_admin&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;IGeekFan&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;company&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;blog&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://igeekfan.cn&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;location&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;luoyunchong@foxmail.com&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hireable&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;bio&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u5B66\u4E60\u4E4B\u8DEF\u6F2B\u6F2B\u65E0\u671F\u3002&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;public_repos&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
  <span class="token property">&quot;public_gists&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;followers&quot;</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
  <span class="token property">&quot;following&quot;</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
  <span class="token property">&quot;created_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2016-04-22T10:33:44Z&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;updated_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2019-12-21T14:49:33Z&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="net-core3-1" tabindex="-1"><a class="header-anchor" href="#net-core3-1" aria-hidden="true">#</a> .NET Core3.1</h2><p>\u4EE5\u4E0B\u4EE3\u7801\u4E3A\u4E3B\u8981\u4EE3\u7801\uFF0C\u5B8C\u6574\u4EE3\u7801\u770B\u4E0B\u9762\u7684 DEMO \u94FE\u63A5\u3002</p><p>\u4F7F\u7528 WebApi \u65F6\uFF0C\u770B\u4E86\u4E00\u4E9B\u9879\u76EE\uFF0C\u5168\u662F\u57FA\u4E8E MVC \u7ED3\u6784\u7684\uFF0C\u90FD\u4E0D\u662F\u6211\u60F3\u8981\u7684\u3002\u770B\u4E86\u4E00\u4E9B\u535A\u5BA2\u4E0A\u9762\u4ECB\u7ECD ,\u6B65\u9AA4\u90FD\u662F\u5343\u7BC7\u4E00\u5F8B\uFF0C\u90FD\u662F\u914D\u5408\u524D\u540E\u7AEF\u5206\u79BB\u7684\u3002</p>`,9),S=s("\u524D\u7AEF\u8FD0\u884C\u5728:"),H={href:"http://localhost:8081",target:"_blank",rel:"noopener noreferrer"},G=s("http://localhost:8081"),T=s("\u540E\u7AEF\u8FD0\u884C\u5728:"),P={href:"https://localhost:5001",target:"_blank",rel:"noopener noreferrer"},J=s("https://localhost:5001"),B=n("h3",{id:"\u524D\u540E\u7AEF\u5206\u79BB\u7684-spa-\u914D\u5408\u7B2C\u4E09\u65B9\u6388\u6743\u767B\u5F55\u6D41\u7A0B\u5982\u4E0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u540E\u7AEF\u5206\u79BB\u7684-spa-\u914D\u5408\u7B2C\u4E09\u65B9\u6388\u6743\u767B\u5F55\u6D41\u7A0B\u5982\u4E0B","aria-hidden":"true"},"#"),s(" \u524D\u540E\u7AEF\u5206\u79BB\u7684 SPA \u914D\u5408\u7B2C\u4E09\u65B9\u6388\u6743\u767B\u5F55\u6D41\u7A0B\u5982\u4E0B")],-1),R=n("p",null,"\u672C\u5730\u6D4B\u8BD5\u65F6\uFF0CgitHub \u56DE\u8C03\u5730\u5740\u8BBE\u7F6E http(s)\u{1F615}/ip:\u7AEF\u53E3/signin-github",-1),V=s("\u5982: "),U={href:"https://localhost:5001/signin-github%E3%80%82",target:"_blank",rel:"noopener noreferrer"},F=s("https://localhost:5001/signin-github\u3002"),N=n("h4",{id:"_1-\u4E0A\u9762\u8FD9\u4E2A\u660E\u660E\u586B\u5199\u7684\u540E\u7AEF\u7684\u5730\u5740-\u90A3\u540E\u7AEF\u600E\u4E48\u628A\u7ED3\u679C\u901A\u77E5\u524D\u7AEF\u5462",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-\u4E0A\u9762\u8FD9\u4E2A\u660E\u660E\u586B\u5199\u7684\u540E\u7AEF\u7684\u5730\u5740-\u90A3\u540E\u7AEF\u600E\u4E48\u628A\u7ED3\u679C\u901A\u77E5\u524D\u7AEF\u5462","aria-hidden":"true"},"#"),s(" 1. \u4E0A\u9762\u8FD9\u4E2A\u660E\u660E\u586B\u5199\u7684\u540E\u7AEF\u7684\u5730\u5740\uFF0C\u90A3\u540E\u7AEF\u600E\u4E48\u628A\u7ED3\u679C\u901A\u77E5\u524D\u7AEF\u5462\uFF1F")],-1),O=s("\u524D\u7AEF\u8BF7\u6C42"),L={href:"https://localhost:5001/signin?provider=GitHub&redirectUrl=http://localhost:8080/login-result",target:"_blank",rel:"noopener noreferrer"},E=s("https://localhost:5001/signin?provider=GitHub&redirectUrl=http://localhost:8080/login-result"),D=n("ul",null,[n("li",null,"\u63D0\u4F9B\u53C2\u6570 provider \u4E3A GitHub\uFF0C"),n("li",null,"redirectUrl \u4E3A GitHub \u6388\u6743\u767B\u5F55\u540E\uFF0C\u56DE\u8C03 signin-github \u540E\uFF0C\u540E\u7AEF\u518D\u53BB\u91CD\u5B9A\u5411\u7684\u5730\u5740\uFF0C\u8FD9\u91CC\u586B\u524D\u7AEF\u7684\u4E00\u4E2A\u8DEF\u7531\u3002")],-1),K=n("h4",{id:"_2-\u540E\u7AEF\u53EA\u63D0\u4F9B\u4E86-signin-signin-callback-\u8DEF\u7531-\u6CA1\u6709-signin-github-\u90A3-github-\u4E0A\u914D\u7F6E\u7684\u8DEF\u7531\u662F\u600E\u4E48\u56DE\u8C03\u56DE\u6765\u5462",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-\u540E\u7AEF\u53EA\u63D0\u4F9B\u4E86-signin-signin-callback-\u8DEF\u7531-\u6CA1\u6709-signin-github-\u90A3-github-\u4E0A\u914D\u7F6E\u7684\u8DEF\u7531\u662F\u600E\u4E48\u56DE\u8C03\u56DE\u6765\u5462","aria-hidden":"true"},"#"),s(" 2. \u540E\u7AEF\u53EA\u63D0\u4F9B\u4E86 signin\uFF0Csignin-callback \u8DEF\u7531\uFF0C\u6CA1\u6709 signin-github\uFF0C\u90A3 github \u4E0A\u914D\u7F6E\u7684\u8DEF\u7531\u662F\u600E\u4E48\u56DE\u8C03\u56DE\u6765\u5462\uFF1F")],-1),M={href:"https://docs.microsoft.com/zh-cn/aspnet/core/security/authentication/social/google-logins?view=aspnetcore-3.1",target:"_blank",rel:"noopener noreferrer"},W=s("google-\u767B\u5F55\uFF0C\u5FAE\u8F6F\u6587\u6863"),j=s("\uFF0C\u5176\u4E2D\u6709\u4E00\u4E2A"),z=n("strong",null,"\u66F4\u6539\u9ED8\u8BA4\u56DE\u8C03 URI",-1),Z=s(",\u901A\u8FC7 AddGitHub \u4E2D\u7684 CallbackPath \u5C5E\u6027\u914D\u7F6E\u3002"),X=e(`<p>\u4ECB\u7ECD\u4E86\u56DE\u8C03\u5730\u5740\u5E94\u914D\u7F6E signin-google,\u6240\u4EE5\u8FD9\u91CC\u5E94\u8BE5\u662F signin-github\uFF0C\u4ED6\u662F\u53EF\u4EE5\u914D\u7F6E\u7684\uFF0C\u4E0D\u9700\u8981\u81EA\u5DF1\u5199\u7A0B\u5E8F\u5904\u7406 signin-google \u8FD9\u4E2A\u8DEF\u7531\uFF0C\u5185\u90E8\u6709\u4E2D\u95F4\u4EF6\u5DF2\u7ECF\u5904\u7406\u4E86\u3002</p><h4 id="_3-\u56DE\u8C03\u5230-signin-github-\u540E-\u540E\u7AEF\u600E\u4E48\u5904\u7406-\u624D\u80FD\u8BA9\u524D\u7AEF\u5237\u65B0\u3002\u83B7\u53D6\u767B\u5F55\u540E\u7684\u4FE1\u606F\u5462\u3002" tabindex="-1"><a class="header-anchor" href="#_3-\u56DE\u8C03\u5230-signin-github-\u540E-\u540E\u7AEF\u600E\u4E48\u5904\u7406-\u624D\u80FD\u8BA9\u524D\u7AEF\u5237\u65B0\u3002\u83B7\u53D6\u767B\u5F55\u540E\u7684\u4FE1\u606F\u5462\u3002" aria-hidden="true">#</a> 3. \u56DE\u8C03\u5230 signin-github \u540E\uFF0C\u540E\u7AEF\u600E\u4E48\u5904\u7406\uFF0C\u624D\u80FD\u8BA9\u524D\u7AEF\u5237\u65B0\u3002\u83B7\u53D6\u767B\u5F55\u540E\u7684\u4FE1\u606F\u5462\u3002</h4><p>\u5177\u4F53\u4E0A\u9762\u7684\u6839\u636E code \u83B7\u53D6 access_token\uFF0C\u6839\u636E access_token \u83B7\u53D6\u7528\u6237\u7684\u4FE1\u606F\u7684\u8FC7\u7A0B\uFF0C\u8FD9\u4E9B\u5904\u7406\u7684\u8FC7\u7A0B\uFF0C\u90FD\u4E0D\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u5904\u7406\u3002\u6211\u4EEC\u53EF\u4EE5\u7528\u76F4\u63A5\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u3002</p><p>\u4E00\u4E2A\u65B9\u6CD5 SignIn,\u53EA\u8981<strong>return Challenge(properties, provider);</strong>\uFF0C</p><ul><li>provider \u4E3A GitHub\uFF0C</li><li>properties var properties = new AuthenticationProperties { RedirectUri = url };</li></ul><p>\u8FD9\u4E2A url \u4E3A\u53E6\u4E00\u4E2A\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u7684\u8DEF\u7531\uFF0C\u53EA\u8981\u62FC\u63A5\u597D\u5730\u5740\u5373\u53EF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var authenticateResult = await _contextAccessor.HttpContext.AuthenticateAsync(provider);
string email = authenticateResult.Principal.FindFirst(ClaimTypes.Email)?.Value;
string name = authenticateResult.Principal.FindFirst(ClaimTypes.Name)?.Value;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6CE8\u5165</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>private readonly IHttpContextAccessor _contextAccessor;
public AuthenticationController( IHttpContextAccessor contextAccessor)
{
    _contextAccessor = contextAccessor;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4EE3\u7801\u90E8\u7F72-\u7B80\u5316" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u90E8\u7F72-\u7B80\u5316" aria-hidden="true">#</a> \u4EE3\u7801\u90E8\u7F72\uFF08\u7B80\u5316\uFF09</h3><p>\u6253\u5F00 NuGet \u5305\u7BA1\u7406,\u5B89\u88C5\u5305</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Install-Package AspNet.Security.OAuth.GitHub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>appSettings.json</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;Authentication&quot;: {
    &quot;GitHub&quot;: {
      &quot;ClientId&quot;: &quot;0be6b05fc717bfc4fb67&quot;,
      &quot;ClientSecret&quot;: &quot;xxxxxxxxxxxxxxx&quot;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>add \u6269\u5C55\u65B9\u6CD5</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public static class JwtConfiguration
{
    public static void AddJwtConfiguration(this IServiceCollection services, IConfiguration configuration)
    {

        services.AddAuthentication(opts =&gt;
            {
                opts.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;
                opts.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;
            }).AddCookie(options =&gt;
        {
            options.LoginPath = &quot;/signin&quot;;
            options.LogoutPath = &quot;/signout&quot;;
        }).AddGitHub(options =&gt;
        {
            options.ClientId = configuration[&quot;Authentication:GitHub:ClientId&quot;];
            options.ClientSecret = configuration[&quot;Authentication:GitHub:ClientSecret&quot;];
        });
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5982\u5934\u50CF\uFF0Cemail\uFF0C\u662F\u6CA1\u6709\u83B7\u53D6\u7684\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>.AddGitHub(options =&gt;
{
    options.ClientId = configuration[&quot;Authentication:GitHub:ClientId&quot;];
    options.ClientSecret = configuration[&quot;Authentication:GitHub:ClientSecret&quot;];
    //options.CallbackPath = new PathString(&quot;~/signin-github&quot;);//\u4E0EGitHub\u4E0A\u7684\u56DE\u8C03\u5730\u5740\u76F8\u540C\uFF0C\u9ED8\u8BA4\u5373\u662F/signin-github
    options.Scope.Add(&quot;user:email&quot;);
    //authenticateResult.Principal.FindFirst(LinConsts.Claims.AvatarUrl)?.Value;  \u5F97\u5230GitHub\u5934\u50CF
    options.ClaimActions.MapJsonKey(LinConsts.Claims.AvatarUrl, &quot;avatar_url&quot;);
    options.ClaimActions.MapJsonKey(LinConsts.Claims.BIO, &quot;bio&quot;);
    options.ClaimActions.MapJsonKey(LinConsts.Claims.BlogAddress, &quot;blog&quot;);
});

#\u5176\u4E2DLinConsts\u7C7B\u4E3A\u9759\u6001\u5E38\u91CF
public static class LinConsts
{
    public static class Claims
    {
        public const string BIO = &quot;urn:github:bio&quot;;
        public const string AvatarUrl = &quot;urn:github:avatar_url&quot;;
        public const string BlogAddress = &quot;urn:github:blog&quot;;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>startup.cs</p><p>ConfigureServices \u4E2D\u914D\u7F6E\u6B64\u670D\u52A1</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    services.AddSingleton&lt;IHttpContextAccessor, HttpContextAccessor&gt;();
    services.AddJwtConfiguration(Configuration);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521B\u5EFA AuthenticationController.cs \u589E\u52A0 SignIn\uFF0C\u7528\u4E8E\u5904\u7406\u7528\u6237\u6388\u6743\u6210\u529F\u540E\uFF0C\u91CD\u5B9A\u56DE signin-callback,\u5E76\u5C06\u53C2\u6570\u5E26\u56DE\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>        private readonly IHttpContextAccessor _contextAccessor;
        private readonly IConfiguration _configuration;

        public AuthenticationController(IHttpContextAccessor contextAccessor, IConfiguration configuration)
        {
            _contextAccessor = contextAccessor;
            _configuration = configuration;
        }

        [HttpGet(&quot;~/signin&quot;)]
        public async Task&lt;IActionResult&gt; SignIn(string provider, string redirectUrl)
        {
            var request = _contextAccessor.HttpContext.Request;
            var url =
                $&quot;{request.Scheme}://{request.Host}{request.PathBase}{request.Path}-callback?provider={provider}&amp;redirectUrl={redirectUrl}&quot;;
            var properties = new AuthenticationProperties { RedirectUri = url };
            properties.Items[&quot;LoginProviderKey&quot;] = provider;
            return Challenge(properties, provider);

        }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),$=s("\u5728 signin \u65B9\u6CD5\u4E2D\uFF0C\u7528\u6237\u70B9\u51FB\u6388\u6743\u540E\uFF08\u7B2C\u4E00\u6B21\uFF09\uFF0C\u4F1A\u6839\u636E\u5176\u4F20\u9012\u7684 URL\uFF0C\u91CD\u5B9A\u5411\u5230\u8FD9\u4E2A\u5730\u5740\uFF0Csignin-callback,\u53C2\u6570\u4E5F\u4F1A\u4E00\u540C\u643A\u5E26\u3002provider \u4E3A GitHub,redirectUrl \u4E3A\uFF1A"),Q={href:"http://localhost:8081/login-result",target:"_blank",rel:"noopener noreferrer"},Y=s("http://localhost:8081/login-result"),nn=s("."),sn=e(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[HttpGet(&quot;~/signin-callback&quot;)]
public async Task&lt;IActionResult&gt; Home(string provider = null, string redirectUrl = &quot;&quot;)
{
    var authenticateResult = await _contextAccessor.HttpContext.AuthenticateAsync(provider);
    if (!authenticateResult.Succeeded) return Redirect(redirectUrl);
    var openIdClaim = authenticateResult.Principal.FindFirst(ClaimTypes.NameIdentifier);
    if (openIdClaim == null || string.IsNullOrWhiteSpace(openIdClaim.Value))
        return Redirect(redirectUrl);

    //TODO \u8BB0\u5F55\u6388\u6743\u6210\u529F\u540E\u7684\u4FE1\u606F

    string email = authenticateResult.Principal.FindFirst(ClaimTypes.Email)?.Value;
    string name = authenticateResult.Principal.FindFirst(ClaimTypes.Name)?.Value;
    string gitHubName = authenticateResult.Principal.FindFirst(GitHubAuthenticationConstants.Claims.Name)?.Value;
    string gitHubUrl = authenticateResult.Principal.FindFirst(GitHubAuthenticationConstants.Claims.Url)?.Value;
    //startup \u4E2D AddGitHub\u914D\u7F6E\u9879  options.ClaimActions.MapJsonKey(LinConsts.Claims.AvatarUrl, &quot;avatar_url&quot;);
    string avatarUrl = authenticateResult.Principal.FindFirst(LinConsts.Claims.AvatarUrl)?.Value;

    return Redirect($&quot;{redirectUrl}?openId={openIdClaim.Value}&quot;);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u65F6\u5019\u6211\u4EEC\u80FD\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u4E86\u3002\u90A3\u4E48\u524D\u7AEF\u600E\u4E48\u529E\u5462\u3002\u6211\u4EEC\u5199\u4E2A\u65B9\u6CD5\uFF0C\u83B7\u53D6\u7528\u6237\u4FE1\u606F\uFF0C\u770B\u770B\u6548\u679C\u3002</p>`,2),an=n("li",null,"\u6D4F\u89C8\u5668\u76F4\u63A5\u6253\u5F00\u80FD\u5F97\u5230 github \u7684 id\u3002",-1),tn=s("axios GET \u8BF7\u6C42 "),en={href:"https://localhost:5001/OpenId",target:"_blank",rel:"noopener noreferrer"},on=s("https://localhost:5001/OpenId"),ln=s(" \u5F97\u5230 null"),cn=e(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[HttpGet(&quot;~/OpenId&quot;)]
public async Task&lt;string&gt; OpenId(string provider = null)
{
   var authenticateResult = await _contextAccessor.HttpContext.AuthenticateAsync(provider);
   if (!authenticateResult.Succeeded) return null;
   var openIdClaim = authenticateResult.Principal.FindFirst(ClaimTypes.NameIdentifier);
   return openIdClaim?.Value;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u8BB0\u5F97\u4E4B\u524D\u4F20 Token \u65F6\uFF0C\u540E\u53F0\u662F\u53EF\u4EE5\u8FD9\u6837\u83B7\u53D6\u7684\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[HttpGet(&quot;~/GetOpenIdByToken&quot;)]
public string GetOpenIdByToken()
{
    return User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LoginResult.vue \u5728 created \u751F\u547D\u5468\u671F\u4E2D\u3002\u90FD\u662F\u5F97\u5230 null</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>axios({
  methods: &quot;get&quot;,
  url: &quot;https://localhost:5001/OpenId?provider=GitHub&quot;
})
  .then(function(response) {
    // handle success
    console.log(response);
  })

axios({
  methods: &quot;get&quot;,
  url: &quot;https://localhost:5001/GetOpenIdByToken&quot;
})
  .then(function(response) {
    // handle success
    console.log(response);
  })
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E3A\u4EC0\u4E48\u5462" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u5462" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u5462\uFF1F\uFF1F\uFF1F</h3><p>\u56E0\u4E3A\u524D\u540E\u7AEF\u5206\u79BB\uFF0C\u4E0D\u662F\u57FA\u4E8E Cookies \u7684\u3002http \u662F\u65E0\u72B6\u6001\u7684\u3002\u6BCF\u6B21\u8BF7\u6C42\u65E0\u6CD5\u533A\u5206\u7528\u6237\u7684\u3002\u6211\u4EEC\u53EF\u4EE5\u6839\u636E\u5F53\u524D\u7684 ClaimsPrincipal\uFF0C\u6839\u636E JWT \u751F\u6210\u76F8\u5E94\u7684 Token\uFF0Caxios \u8BF7\u6C42\u65F6\uFF0C\u653E\u5230 headers \u4E2D\u3002</p><p>\u5B89\u88C5\u5305</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Install-Package Microsoft.AspNetCore.Authentication.JwtBearer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>AppSettings.json \u914D\u7F6E\u6539\u6210</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;Authentication&quot;: {
&quot;JwtBearer&quot;: {
  &quot;SecurityKey&quot;: &quot;JWTStudyWebsite_DI20DXU3&quot;,
  &quot;Issuer&quot;: &quot;JWTStudy&quot;,
  &quot;Audience&quot;: &quot;JWTStudyWebsite&quot;
},
&quot;GitHub&quot;: {
  &quot;ClientId&quot;: &quot;0be6b05fc717bfc4fb67&quot;,
  &quot;ClientSecret&quot;: &quot;xxxxxxxxxxxxxxx&quot;
}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 signin-callback \u8DEF\u7531\u4E2D\uFF0C\u5F97\u5230 authenticateResult.Principal\uFF0C\u5176\u4E2D\u9ED8\u8BA4\u5305\u542B\u4E86(id,login,name,url)\uFF0C\u6388\u6743\u5F97\u5230 eamil\uFF0C\u53E6\u5916 MapJsonKey \u6269\u5C55\u4E86\u4EE5\u4E0B\u5B57\u6BB5\uFF08avatar_url\u3001bio\u3001blog)</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> authenticateResult <span class="token operator">=</span> <span class="token keyword">await</span> _contextAccessor<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span><span class="token function">AuthenticateAsync</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> token <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CreateToken</span><span class="token punctuation">(</span>authenticateResult<span class="token punctuation">.</span>Principal<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E ClaimsPrincipal \u503C\u751F\u6210 token \u503C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">CreateToken</span><span class="token punctuation">(</span><span class="token class-name">ClaimsPrincipal</span> claimsPrincipal<span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    <span class="token class-name"><span class="token keyword">var</span></span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JwtSecurityTokenHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>
        Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>_configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:JwtBearer:SecurityKey&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> credentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SigningCredentials</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> SecurityAlgorithms<span class="token punctuation">.</span>HmacSha256<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JwtSecurityToken</span><span class="token punctuation">(</span>
        _configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:JwtBearer:Issuer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        _configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:JwtBearer:Audience&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        claimsPrincipal<span class="token punctuation">.</span>Claims<span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">expires</span><span class="token punctuation">:</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddMinutes</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">signingCredentials</span><span class="token punctuation">:</span> credentials
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> handler<span class="token punctuation">.</span><span class="token function">WriteToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684 claimsPrincipal \u662F\u4EC0\u4E48\u5462\u3002\u7B80\u5355\u7684\u8BF4\u5C31\u662F\u4E00\u4E2A\u5B58\u6709 github \u6388\u6743\u4FE1\u606F\u7684\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u89E3\u6790\u51FA\u5BF9\u5E94\u7684 Clamis\uFF0C\u8FD9\u91CC\u5176\u5B9E\u5C31\u662F\u7528\u4E86 Clamis \u7684\u5C5E\u6027\u503C\u3002</p><table><thead><tr><th>Claim</th><th>ClaimsIdentity</th><th>ClaimsPrincipal</th></tr></thead><tbody><tr><td>id\u3001name,url,email,avatar_url \u7B49</td><td>\u7531\u591A\u7EC4 Claim \u7EC4\u6210\uFF0C\u8FD9\u91CC\u53EF\u6307 GitHub \u6388\u6743\u767B\u5F55\u540E\u5F97\u5230\u7684\u90A3\u4E2A\u5BF9\u8C61\u3002</td><td>ClaimsIdentity \u7684\u6301\u6709\u8005</td></tr></tbody></table>`,17),pn=s("\u5177\u4F53 Jwt \u7684\u751F\u6210\u4E0E\u914D\u7F6E\u9879\u3002\u8FD9\u91CC\u4E0D\u8BE6\u7EC6\u8BF4\u660E\u3002\u53EF\u4EE5\u770B\u8FD9\u4E2A\u793A\u4F8B\uFF08.NET Core2.2\uFF09"),un={href:"https://github.com/luoyunchong/BasicTemplate",target:"_blank",rel:"noopener noreferrer"},rn=s("https://github.com/luoyunchong/BasicTemplate"),dn=e(`<p>AddJwtConfiguration \u6539\u6210\u5982\u4E0B\u5185\u5BB9</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddJwtConfiguration</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">,</span> <span class="token class-name">IConfiguration</span> configuration<span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span>opts <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            opts<span class="token punctuation">.</span>DefaultScheme <span class="token operator">=</span> CookieAuthenticationDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
            opts<span class="token punctuation">.</span>DefaultAuthenticateScheme <span class="token operator">=</span> JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddCookie</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>LoginPath <span class="token operator">=</span> <span class="token string">&quot;/signin&quot;</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>LogoutPath <span class="token operator">=</span> <span class="token string">&quot;/signout&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddJwtBearer</span><span class="token punctuation">(</span>JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">,</span> options <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>Audience <span class="token operator">=</span> configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:JwtBearer:Audience&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        options<span class="token punctuation">.</span>TokenValidationParameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TokenValidationParameters</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// The signing key must match!</span>
            ValidateIssuerSigningKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            IssuerSigningKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>
                Encoding<span class="token punctuation">.</span>ASCII<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:JwtBearer:SecurityKey&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

            <span class="token comment">// Validate the JWT Issuer (iss) claim</span>
            ValidateIssuer <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            ValidIssuer <span class="token operator">=</span> configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:JwtBearer:Issuer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

            <span class="token comment">// Validate the JWT Audience (aud) claim</span>
            ValidateAudience <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            ValidAudience <span class="token operator">=</span> configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:JwtBearer:Audience&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

            <span class="token comment">// Validate the token expiry</span>
            ValidateLifetime <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

            <span class="token comment">// If you want to allow a certain amount of clock drift, set that here</span>
            <span class="token comment">//ClockSkew = TimeSpan.Zero</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddGitHub</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>ClientId <span class="token operator">=</span> configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:GitHub:ClientId&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>ClientSecret <span class="token operator">=</span> configuration<span class="token punctuation">[</span><span class="token string">&quot;Authentication:GitHub:ClientSecret&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//options.CallbackPath = new PathString(&quot;~/signin-github&quot;);//\u4E0EGitHub\u4E0A\u7684\u56DE\u8C03\u5730\u5740\u76F8\u540C\uFF0C\u9ED8\u8BA4\u5373\u662F/signin-github</span>
        options<span class="token punctuation">.</span>Scope<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;user:email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//authenticateResult.Principal.FindFirst(LinConsts.Claims.AvatarUrl)?.Value;  \u5F97\u5230GitHub\u5934\u50CF</span>
        options<span class="token punctuation">.</span>ClaimActions<span class="token punctuation">.</span><span class="token function">MapJsonKey</span><span class="token punctuation">(</span>LinConsts<span class="token punctuation">.</span>Claims<span class="token punctuation">.</span>AvatarUrl<span class="token punctuation">,</span> <span class="token string">&quot;avatar_url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>ClaimActions<span class="token punctuation">.</span><span class="token function">MapJsonKey</span><span class="token punctuation">(</span>LinConsts<span class="token punctuation">.</span>Claims<span class="token punctuation">.</span>BIO<span class="token punctuation">,</span> <span class="token string">&quot;bio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>ClaimActions<span class="token punctuation">.</span><span class="token function">MapJsonKey</span><span class="token punctuation">(</span>LinConsts<span class="token punctuation">.</span>Claims<span class="token punctuation">.</span>BlogAddress<span class="token punctuation">,</span> <span class="token string">&quot;blog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),vn={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/aspnetcore-oatuth2/spa-vue-oauth2/src/components/LoginResult.vue",target:"_blank",rel:"noopener noreferrer"},bn=s("\u524D\u7AEF LoginResult.vue \u4EE3\u7801"),mn=e(`<p>\u524D\u7AEF\u8FD0\u884C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span>
<span class="token function">yarn</span> serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u70B9\u51FB GitHub \u767B\u5F55</p><p>GetOpenIdByToken \u6839\u636E\u751F\u6210\u7684 token \u503C\uFF0C\u89E3\u6790\u51FA\u4E86\u7528\u6237 id,\u8FD9\u6837\u524D\u7AEF\u5728 login-result \u8FD9\u4E2A\u7EC4\u4EF6\u4E2D\uFF0C\u628A token \u4FDD\u5B58\u597D\uFF0C\u5E76\u91CD\u5B9A\u5411\u81EA\u5DF1\u7684\u4E3B\u9875\uFF0C\u83B7\u53D6\u7528\u6237\u6240\u6709\u4FE1\u606F\u5373\u53EF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>data: 18613266
status: 200
config: {url: &quot;https://localhost:5001/GetOpenIdByToken&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),kn=s("OpenId?provider=GitHub \u5219\u5F97\u4E0D\u5230\u6570\u636E\uFF0C\u53EA\u80FD\u6D4F\u89C8\u5668\u76F4\u63A5\u8BF7\u6C42 "),hn={href:"https://localhost:5001/OpenId?provider=GitHub%EF%BC%8C%E6%89%8D%E8%83%BD%E5%88%B0",target:"_blank",rel:"noopener noreferrer"},gn=s("https://localhost:5001/OpenId?provider=GitHub\uFF0C\u624D\u80FD\u5230"),_n=s(" github \u7684 id\u3002\u8FD9\u4E2A\u9002\u5E94\u4E8E\u524D\u540E\u7AEF\u4E0D\u5206\u79BB\uFF0C\u6216\u8005\u5C5E\u4E8E\u4E4B\u524D\u6211\u4EEC\u7ECF\u5E38\u4F7F\u7528 MVC \u7ED3\u6784\uFF0C\u540C\u4E00\u57DF\u540D\u4E0B\uFF0C\u540C\u4E00\u7AEF\u53E3\uFF0C\u57FA\u4E8E Cookies \u767B\u5F55\u7684\u5224\u65AD\u3002"),qn=n("h2",{id:"\u53C2\u8003",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u8003","aria-hidden":"true"},"#"),s(" \u53C2\u8003")],-1),xn={href:"https://www.cnblogs.com/rsls/p/10522649.html",target:"_blank",rel:"noopener noreferrer"},fn=s(".net Core2.2 WebApi \u901A\u8FC7 OAuth2.0 \u5B9E\u73B0\u5FAE\u4FE1\u767B\u5F55"),yn={href:"https://blog.csdn.net/weixin_30414305/article/details/101389325",target:"_blank",rel:"noopener noreferrer"},Cn=s("AspNetCore3.0 \u548C JWT"),An={href:"http://www.woshipm.com/pd/509712.html",target:"_blank",rel:"noopener noreferrer"},wn=s("\u7528\u6237\u7CFB\u7EDF\u8BBE\u8BA1\uFF1A\u7B2C\u4E09\u65B9\u6388\u6743\u3001\u8D26\u53F7\u7ED1\u5B9A\u53CA\u89E3\u7ED1\uFF08\u4E0B\uFF09"),In=n("h2",{id:"demo-\u793A\u4F8B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#demo-\u793A\u4F8B","aria-hidden":"true"},"#"),s(" Demo \u793A\u4F8B")],-1),Sn=s("GitHub "),Hn={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/aspnetcore-oatuth2",target:"_blank",rel:"noopener noreferrer"},Gn=s("https://github.com/luoyunchong/dotnetcore-examples/blob/master/aspnetcore-oatuth2");function Tn(Pn,Jn){const a=l("ExternalLinkIcon");return c(),o("div",null,[n("p",null,[u,n("a",r,[d,t(a)]),v]),b,n("ul",null,[n("li",null,[m,n("a",k,[h,t(a)])])]),g,_,n("ul",null,[n("li",null,[n("a",q,[x,t(a)])]),n("li",null,[n("a",f,[y,t(a)])])]),C,n("p",null,[n("a",A,[w,t(a)])]),I,n("ul",null,[n("li",null,[S,n("a",H,[G,t(a)])]),n("li",null,[T,n("a",P,[J,t(a)])])]),B,R,n("ul",null,[n("li",null,[V,n("a",U,[F,t(a)])])]),N,n("p",null,[O,n("strong",null,[n("a",L,[E,t(a)])])]),D,K,n("p",null,[n("a",M,[W,t(a)]),j,z,Z]),X,n("p",null,[$,n("a",Q,[Y,t(a)]),nn]),sn,n("ul",null,[an,n("li",null,[tn,n("a",en,[on,t(a)]),ln])]),cn,n("p",null,[pn,n("a",un,[rn,t(a)])]),dn,n("p",null,[n("a",vn,[bn,t(a)])]),mn,n("p",null,[kn,n("a",hn,[gn,t(a)]),_n]),qn,n("ul",null,[n("li",null,[n("a",xn,[fn,t(a)])]),n("li",null,[n("a",yn,[Cn,t(a)])]),n("li",null,[n("a",An,[wn,t(a)])])]),In,n("ul",null,[n("li",null,[Sn,n("a",Hn,[Gn,t(a)])])])])}var Vn=i(p,[["render",Tn],["__file","spa-github-login.html.vue"]]);export{Vn as default};
