import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as a,o as e}from"./app-CsMb1ovl.js";const l={};function t(h,i){return e(),n("div",null,i[0]||(i[0]=[a(`<h1 id="部署指南" tabindex="-1"><a class="header-anchor" href="#部署指南"><span>部署指南</span></a></h1><p>本文档介绍如何部署 <a href="http://LinCMS.NET" target="_blank" rel="noopener noreferrer">LinCMS.NET</a> Core 后端和 LinCMS Vue 2 前端项目。</p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>通常部署包含以下步骤：</p><ol><li><strong>环境准备</strong>: 安装必要的运行时和依赖 (如 .NET Runtime, <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core Runtime, Node.js, Web 服务器, 数据库)。</li><li><strong>构建/发布项目</strong>: 生成生产环境可用的文件。</li><li><strong>配置</strong>: 配置数据库连接、API 地址、Web 服务器等。</li><li><strong>部署文件</strong>: 将生成的文件复制到服务器。</li><li><strong>运行与托管</strong>: 使用 Web 服务器 (如 Nginx, IIS) 或进程管理工具 (如 Systemd, Supervisor, Docker) 运行和托管应用。</li></ol><h2 id="后端部署-lincms-net-core" tabindex="-1"><a class="header-anchor" href="#后端部署-lincms-net-core"><span>后端部署 (<a href="http://LinCMS.NET" target="_blank" rel="noopener noreferrer">LinCMS.NET</a> Core)</span></a></h2><h3 id="_1-环境准备" tabindex="-1"><a class="header-anchor" href="#_1-环境准备"><span>1. 环境准备</span></a></h3><ul><li><strong>操作系统</strong>: Linux (推荐 CentOS, Ubuntu) 或 Windows Server。</li><li><strong>.NET Runtime</strong>: 安装与项目匹配的 <a href="https://dotnet.microsoft.com/download/dotnet" target="_blank" rel="noopener noreferrer">.NET Runtime</a> 和 <a href="https://dotnet.microsoft.com/download/dotnet/aspnetcore" target="_blank" rel="noopener noreferrer">ASP.NET Core Runtime</a>。</li><li><strong>数据库</strong>: 安装和配置你选择的数据库 (MySQL, PostgreSQL, SQL Server, etc.)。</li><li><strong>Web 服务器 (可选但推荐)</strong>: Nginx (Linux) 或 IIS (Windows)。</li><li><strong>进程管理器 (Linux)</strong>: Systemd 或 Supervisor。</li></ul><h3 id="_2-发布项目" tabindex="-1"><a class="header-anchor" href="#_2-发布项目"><span>2. 发布项目</span></a></h3><p>在你的开发机器或构建服务器上，进入后端项目根目录 (<code>lin-cms-dotnetcore</code>)，执行发布命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 发布到 bin/Release/netX.0/publish 目录 (X 是 .NET 版本)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> publish</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> src/LinCms.Web/LinCms.Web.csproj</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./publish_output</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果需要指定运行时 (例如部署到不支持自包含部署的 Linux x64)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># dotnet publish src/LinCms.Web/LinCms.Web.csproj -c Release -r linux-x64 --self-contained false -o ./publish_output</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将生成包含所有依赖项的可执行文件和配置文件到 <code>publish_output</code> 目录。</p><h3 id="_3-配置" tabindex="-1"><a class="header-anchor" href="#_3-配置"><span>3. 配置</span></a></h3><ul><li>将 <code>publish_output</code> 目录下的 <code>appsettings.json</code> 或创建 <code>appsettings.Production.json</code> 文件，修改其中的数据库连接字符串 (<code>ConnectionStrings</code>)、<code>DbType</code>、JWT 密钥 (<code>Jwt:SecretKey</code>)、文件存储路径 (<code>File:StoreDir</code>) 等生产环境配置。</li><li><strong>确保 <code>ASPNETCORE_ENVIRONMENT</code> 环境变量在服务器上设置为 <code>Production</code></strong>，这样 <code>appsettings.Production.json</code> 才会生效。</li></ul><h3 id="_4-部署文件" tabindex="-1"><a class="header-anchor" href="#_4-部署文件"><span>4. 部署文件</span></a></h3><p>将 <code>publish_output</code> 目录下的所有文件复制到服务器的目标部署目录 (例如 <code>/var/www/lincms-backend</code>)。</p><h3 id="_5-运行与托管" tabindex="-1"><a class="header-anchor" href="#_5-运行与托管"><span>5. 运行与托管</span></a></h3><p><strong>方式一: 使用 Nginx + Systemd (推荐用于 Linux)</strong></p><ol><li><p><strong>创建 Systemd 服务单元文件</strong>: <code>/etc/systemd/system/lincms-backend.service</code></p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" data-title="ini" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">LinCMS.NET Core Backend Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">network.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">WorkingDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">/var/www/lincms-backend </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 你的部署目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">/usr/bin/dotnet /var/www/lincms-backend/LinCms.Web.dll </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 确保 dotnet 路径正确</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">always</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">RestartSec</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">10 </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Restart service after 10 seconds if dotnet service crashes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">SyslogIdentifier</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">lincms-backend</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">www-data </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 建议使用非 root 用户运行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ASPNETCORE_ENVIRONMENT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">Production</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">DOTNET_PRINT_TELEMETRY_MESSAGE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">multi-user.target</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>启用并启动服务</strong>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lincms-backend.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lincms-backend.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lincms-backend.service</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看状态</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>配置 Nginx 反向代理</strong>: 编辑 Nginx 配置文件 (通常在 <code>/etc/nginx/sites-available/</code> 或 <code>/etc/nginx/conf.d/</code>)。</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    listen </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[::]:80;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">your_backend_domain.com; </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 替换为你的域名或 IP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 可选：HTTP 到 HTTPS 跳转</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # return 301 https://$host$request_uri;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        http://localhost:5000; </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指向你的 .NET Core 应用监听的地址和端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  Upgrade $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  Connection keep-alive;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  Host $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_cache_bypass </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  X-Forwarded-For $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">proxy_add_x_forwarded_for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  X-Forwarded-Proto $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果启用了 HTTPS (需要 SSL 证书)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># server {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     listen 443 ssl http2;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     listen [::]:443 ssl http2;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     server_name your_backend_domain.com;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     ssl_certificate /path/to/your/fullchain.pem;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     ssl_certificate_key /path/to/your/privkey.pem;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     include /etc/nginx/snippets/ssl-params.conf; # 可选的 SSL 参数配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     location / {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#         proxy_pass         http://localhost:5000;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#         # ... 其他 proxy_set_header 同上 ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>测试 Nginx 配置并重载</strong>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -t</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>方式二: 使用 Docker</strong></p><ol><li><p><strong>创建 Dockerfile</strong>: 在后端项目根目录创建 <code>Dockerfile</code>。</p><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> mcr.microsoft.com/dotnet/aspnet:6.0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> base</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> /app</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">EXPOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">EXPOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 443</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> mcr.microsoft.com/dotnet/sdk:6.0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> build</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> /src</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Web/LinCms.Web.csproj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Web/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Application/LinCms.Application.csproj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Application/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Application.Contracts/LinCms.Application.Contracts.csproj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Application.Contracts/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Infrastructure/LinCms.Infrastructure.csproj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Infrastructure/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Core/LinCms.Core.csproj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Core/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 根据你的项目结构调整 COPY 命令</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> dotnet restore </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/LinCms.Web/LinCms.Web.csproj&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> . .</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">WORKDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;/src/src/LinCms.Web&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> dotnet build </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;LinCms.Web.csproj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> -c Release -o /app/build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> build </span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> publish</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> dotnet publish </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;LinCms.Web.csproj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> -c Release -o /app/publish</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> base </span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> final</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> /app</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> --from=publish /app/publish .</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 确保 appsettings.Production.json 被包含或通过卷挂载</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;dotnet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;LinCms.Web.dll&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>构建 Docker 镜像</strong>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lincms-backend:latest</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>运行 Docker 容器</strong>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 5000:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       -e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ASPNETCORE_ENVIRONMENT=Production</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /path/on/host/appsettings.Production.json:/app/appsettings.Production.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 可选：挂载文件存储目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # -v /path/on/host/uploads:/app/uploads \\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">       --name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lincms-backend-container</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">       lincms-backend:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><code>-p 5000:80</code> 将容器的 80 端口映射到宿主机的 5000 端口。</em><br><em><code>-v</code> 用于挂载生产配置文件和可能的持久化目录。</em></p></li><li><p>(可选) 使用 Nginx 作为反向代理指向 Docker 容器暴露的端口 (如 5000)。</p></li></ol><p><strong>方式三: 使用 IIS (Windows)</strong></p><ol><li>安装 <a href="https://dotnet.microsoft.com/download/dotnet/aspnetcore" target="_blank" rel="noopener noreferrer">ASP.NET Core Hosting Bundle</a>。</li><li>在 IIS 管理器中创建新的网站。</li><li>将物理路径指向你部署文件的目录。</li><li>配置应用程序池的 .NET CLR 版本为 &quot;无托管代码&quot;。</li><li>确保应用程序池用户具有部署目录的读取权限。</li><li>配置绑定 (域名、IP、端口)。</li></ol><h2 id="前端部署-lincms-vue-2" tabindex="-1"><a class="header-anchor" href="#前端部署-lincms-vue-2"><span>前端部署 (LinCMS Vue 2)</span></a></h2><p>前端项目是静态文件，需要部署到 Web 服务器上。</p><h3 id="_1-环境准备-1" tabindex="-1"><a class="header-anchor" href="#_1-环境准备-1"><span>1. 环境准备</span></a></h3><ul><li><strong>Web 服务器</strong>: Nginx, Apache, IIS, 或其他可以托管静态文件的服务器。</li><li><strong>Node.js 和 pnpm</strong>: 用于构建项目 (通常在开发或构建服务器上)。</li></ul><h3 id="_2-构建项目" tabindex="-1"><a class="header-anchor" href="#_2-构建项目"><span>2. 构建项目</span></a></h3><p>在前端项目根目录 (<code>lin-cms-vue</code>) 执行构建命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将生成静态文件到 <code>dist</code> 目录下。</p><h3 id="_3-配置-1" tabindex="-1"><a class="header-anchor" href="#_3-配置-1"><span>3. 配置</span></a></h3><ul><li><strong>API 地址</strong>: 确保构建时使用的 <code>.env.production</code> 文件中的 <code>VITE_APP_BASE_URL</code> 指向你部署的后端 API 地址。</li><li><strong>Web 服务器配置</strong>: 配置 Web 服务器以正确处理单页应用 (SPA) 的路由。</li></ul><h3 id="_4-部署文件-1" tabindex="-1"><a class="header-anchor" href="#_4-部署文件-1"><span>4. 部署文件</span></a></h3><p>将 <code>dist</code> 目录下的所有文件复制到 Web 服务器的网站根目录或指定子目录 (例如 <code>/var/www/lincms-frontend</code>)。</p><h3 id="_5-配置-web-服务器-nginx-示例" tabindex="-1"><a class="header-anchor" href="#_5-配置-web-服务器-nginx-示例"><span>5. 配置 Web 服务器 (Nginx 示例)</span></a></h3><p>编辑 Nginx 配置文件，添加或修改 <code>server</code> 块：</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或 443 (如果使用 HTTPS)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">your_frontend_domain.com; </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 替换为你的前端域名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/var/www/lincms-frontend; </span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指向 dist 目录内容的位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">index.html index.htm;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # SSL 配置 (如果使用 HTTPS)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # ssl_certificate /path/to/your/fullchain.pem;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # ssl_certificate_key /path/to/your/privkey.pem;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # include /etc/nginx/snippets/ssl-params.conf;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # try_files 指令是处理 SPA 路由的关键</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 它会尝试查找请求的文件或目录，如果找不到，则返回 /index.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 可选：配置 API 代理 (如果前端和后端部署在同一域名下不同路径)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # location /api/ { # 假设 API 路径以 /api/ 开头</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #     proxy_pass http://your_backend_domain.com; # 指向后端服务</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #     proxy_set_header Host $host;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #     proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #     proxy_set_header X-Forwarded-Proto $scheme;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 可选：配置 Gzip 压缩</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    gzip_vary </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    gzip_min_length </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    gzip_proxied </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">expired no-cache no-store private auth;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    gzip_types </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    gzip_disable </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;MSIE [1-6]\\.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 可选：配置浏览器缓存</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    location</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75;"> \\.(?:css|js)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        expires </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">1y;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Cache-Control </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;public&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    location</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75;"> \\.(?:png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1M</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Cache-Control </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;public&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关键配置</strong>: <code>try_files $uri $uri/ /index.html;</code> 确保了当用户直接访问或刷新非根路径 (如 <code>/user/list</code>) 时，Nginx 仍然返回 <code>index.html</code>，由前端 Vue Router 处理路由。</p><p><strong>测试 Nginx 配置并重载</strong>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -t</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自动化部署-ci-cd" tabindex="-1"><a class="header-anchor" href="#自动化部署-ci-cd"><span>自动化部署 (CI/CD)</span></a></h2><p>考虑使用 GitHub Actions, GitLab CI, Jenkins 等工具实现自动化构建和部署流程，以提高效率和减少错误。</p><ul><li><strong>GitHub Actions 示例</strong>: 参考项目中的 <code>.github/workflows</code> 目录 (如果存在) 或查阅 <a href="https://docs.github.com/en/actions" target="_blank" rel="noopener noreferrer">GitHub Actions 文档</a>。</li><li><strong>文档站点部署脚本</strong>: 项目根目录下的 <a href="deploy.ps1"><code>deploy.ps1</code></a> 是用于部署本文档站点的示例脚本。</li></ul>`,44)]))}const r=s(l,[["render",t],["__file","deployment.html.vue"]]),d=JSON.parse('{"path":"/dotnetcore/lin-cms/deployment.html","title":"部署指南","lang":"zh-CN","frontmatter":{"description":"部署指南 本文档介绍如何部署 LinCMS.NET Core 后端和 LinCMS Vue 2 前端项目。 概述 通常部署包含以下步骤： 环境准备: 安装必要的运行时和依赖 (如 .NET Runtime, ASP.NET Core Runtime, Node.js, Web 服务器, 数据库)。 构建/发布项目: 生成生产环境可用的文件。 配置: 配...","head":[["meta",{"property":"og:url","content":"https://igeekfan.cn/igeekfan-docs/dotnetcore/lin-cms/deployment.html"}],["meta",{"property":"og:site_name","content":".NET 开发者指北"}],["meta",{"property":"og:title","content":"部署指南"}],["meta",{"property":"og:description","content":"部署指南 本文档介绍如何部署 LinCMS.NET Core 后端和 LinCMS Vue 2 前端项目。 概述 通常部署包含以下步骤： 环境准备: 安装必要的运行时和依赖 (如 .NET Runtime, ASP.NET Core Runtime, Node.js, Web 服务器, 数据库)。 构建/发布项目: 生成生产环境可用的文件。 配置: 配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-28T17:00:03.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-28T17:00:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-28T17:00:03.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://igeekfan.cn/igeekfan-docs/atom.xml","title":".NET 开发者指北 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://igeekfan.cn/igeekfan-docs/feed.json","title":".NET 开发者指北 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://igeekfan.cn/igeekfan-docs/rss.xml","title":".NET 开发者指北 RSS Feed"}]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"后端部署 (LinCMS.NET Core)","slug":"后端部署-lincms-net-core","link":"#后端部署-lincms-net-core","children":[{"level":3,"title":"1. 环境准备","slug":"_1-环境准备","link":"#_1-环境准备","children":[]},{"level":3,"title":"2. 发布项目","slug":"_2-发布项目","link":"#_2-发布项目","children":[]},{"level":3,"title":"3. 配置","slug":"_3-配置","link":"#_3-配置","children":[]},{"level":3,"title":"4. 部署文件","slug":"_4-部署文件","link":"#_4-部署文件","children":[]},{"level":3,"title":"5. 运行与托管","slug":"_5-运行与托管","link":"#_5-运行与托管","children":[]}]},{"level":2,"title":"前端部署 (LinCMS Vue 2)","slug":"前端部署-lincms-vue-2","link":"#前端部署-lincms-vue-2","children":[{"level":3,"title":"1. 环境准备","slug":"_1-环境准备-1","link":"#_1-环境准备-1","children":[]},{"level":3,"title":"2. 构建项目","slug":"_2-构建项目","link":"#_2-构建项目","children":[]},{"level":3,"title":"3. 配置","slug":"_3-配置-1","link":"#_3-配置-1","children":[]},{"level":3,"title":"4. 部署文件","slug":"_4-部署文件-1","link":"#_4-部署文件-1","children":[]},{"level":3,"title":"5. 配置 Web 服务器 (Nginx 示例)","slug":"_5-配置-web-服务器-nginx-示例","link":"#_5-配置-web-服务器-nginx-示例","children":[]}]},{"level":2,"title":"自动化部署 (CI/CD)","slug":"自动化部署-ci-cd","link":"#自动化部署-ci-cd","children":[]}],"git":{"createdTime":1745859603000,"updatedTime":1745859603000,"contributors":[{"name":"igeekfan","email":"igeekfan@foxmail.com","commits":1}]},"readingTime":{"minutes":5.71,"words":1712},"filePathRelative":"dotnetcore/lin-cms/deployment.md","localizedDate":"2025年4月28日","autoDesc":true}');export{r as comp,d as data};
