import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as s,o as t}from"./app-CsMb1ovl.js";const r={};function n(l,e){return t(),a("div",null,e[0]||(e[0]=[s(`<h1 id="docker-配置-portainer" tabindex="-1"><a class="header-anchor" href="#docker-配置-portainer"><span>Docker 配置 Portainer</span></a></h1><h2 id="docker-可视化管" tabindex="-1"><a class="header-anchor" href="#docker-可视化管"><span>Docker 可视化管</span></a></h2><ul><li>portainer 默认9000端口</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> portainer/portainer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 9000:9000</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">--restart=always </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">portainer_data:/data</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">--name </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">portainer</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-d </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">portainer/portainer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>-d 后台运行</li><li>-p 端口映射 主机端口9000:容器端口9000</li><li>--restart=always 容器退出时总是重启</li><li>-v 本地docker.sock</li><li><code>--</code>name指定容器名</li><li>-d 指定镜像名</li></ul>`,6)]))}const k=i(r,[["render",n],["__file","Docker-Portainer.html.vue"]]),h=JSON.parse('{"path":"/dotnetcore/docker/Docker-Portainer.html","title":"Docker 配置 Portainer","lang":"zh-CN","frontmatter":{"description":"Docker 配置 Portainer Docker 可视化管 portainer 默认9000端口 -d 后台运行 -p 端口映射 主机端口9000:容器端口9000 --restart=always 容器退出时总是重启 -v 本地docker.sock --name指定容器名 -d 指定镜像名","head":[["meta",{"property":"og:url","content":"https://igeekfan.cn/igeekfan-docs/dotnetcore/docker/Docker-Portainer.html"}],["meta",{"property":"og:site_name","content":".NET 开发者指北"}],["meta",{"property":"og:title","content":"Docker 配置 Portainer"}],["meta",{"property":"og:description","content":"Docker 配置 Portainer Docker 可视化管 portainer 默认9000端口 -d 后台运行 -p 端口映射 主机端口9000:容器端口9000 --restart=always 容器退出时总是重启 -v 本地docker.sock --name指定容器名 -d 指定镜像名"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-23T09:18:51.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-23T09:18:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 配置 Portainer\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-07-23T09:18:51.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://igeekfan.cn/igeekfan-docs/atom.xml","title":".NET 开发者指北 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://igeekfan.cn/igeekfan-docs/feed.json","title":".NET 开发者指北 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://igeekfan.cn/igeekfan-docs/rss.xml","title":".NET 开发者指北 RSS Feed"}]]},"headers":[{"level":2,"title":"Docker 可视化管","slug":"docker-可视化管","link":"#docker-可视化管","children":[]}],"git":{"createdTime":1656530243000,"updatedTime":1658567931000,"contributors":[{"name":"igeekfan","email":"luoyunchong@foxmail.com","commits":2}]},"readingTime":{"minutes":0.29,"words":86},"filePathRelative":"dotnetcore/docker/Docker-Portainer.md","localizedDate":"2022年6月29日","autoDesc":true}');export{k as comp,h as data};
