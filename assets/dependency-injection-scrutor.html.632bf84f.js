import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c,a as n,b as e,F as o,e as s,d as l,o as u}from"./app.4fe6120a.js";const r={},i=n("h1",{id:"\u4F9D\u8D56\u6CE8\u5165scrutor",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F9D\u8D56\u6CE8\u5165scrutor","aria-hidden":"true"},"#"),s(" \u4F9D\u8D56\u6CE8\u5165scrutor")],-1),k=n("p",null,"\u5B98\u7F51\u4ECB\u7ECD",-1),d={href:"https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.2",target:"_blank",rel:"noopener noreferrer"},m=s("https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.2"),b=s("\u5F00\u6E90\u5730\u5740"),h={href:"https://github.com/khellang/Scrutor",target:"_blank",rel:"noopener noreferrer"},g=s("https://github.com/khellang/Scrutor"),f=s("\u53C2\u8003\u6587\u6863 "),y={href:"https://www.cnblogs.com/catcher1994/p/10316928.html",target:"_blank",rel:"noopener noreferrer"},v=s("https://www.cnblogs.com/catcher1994/p/10316928.html"),w=s(" \u624B\u52A8\u7BA1\u7406\u4F9D\u8D56\u6CE8\u5165\u8FC7\u4E8E\u9EBB\u70E6,\u5F53\u6709\u591A\u4E2A\u4ED3\u50A8\uFF0C\u670D\u52A1\uFF0C\u65E0\u6CD5\u7EDF\u4E00\u6CE8\u5165\uFF0CScrutor\u80FD\u5E2E\u52A9\u6211\u4EEC\u7B80\u5316ASP.NET Core\u7684DI\u6CE8\u518C\u3002"),_=l(`<p>\u5728ConfigServices\u4E2D\uFF0C\u6211\u4EEC\u539F\u672C\u9700\u8981\u8FD9\u6837\u5B50\u4F9D\u6B21\u6CE8\u5165\u4ED3\u50A8\uFF0C\u670D\u52A1\u548C\u5176\u4ED6\u63A5\u53E3\u53CA\u5B9E\u73B0\uFF0C\u5F53\u6709\u591A\u4E2A\u4ED3\u50A8\u65F6\uFF0C\u8FD9\u6837\u5C31\u8FC7\u4E8E\u7E41\u7410\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IUserRepository<span class="token punctuation">,</span> UserRepository<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IUserService<span class="token punctuation">,</span> UserService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ICurrentUser<span class="token punctuation">,</span> CurrentUser<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="serivce\u540E\u7F00\u670D\u52A1\u6CE8\u5165di" tabindex="-1"><a class="header-anchor" href="#serivce\u540E\u7F00\u670D\u52A1\u6CE8\u5165di" aria-hidden="true">#</a> Serivce\u540E\u7F00\u670D\u52A1\u6CE8\u5165DI</h2><p>\u5F53\u6211\u4EEC\u6709\u591A\u4E2AService\u540E\u7F00\u7684\u670D\u52A1\u65F6\uFF0C\u4F7F\u7528\u4EE5\u4E0B\u65B9\u6CD5\uFF0C\u53EF\u5C06\u670D\u52A1\u626B\u63CF\u53EA\u7559\u4E0B\u4EE5Serivce\u7ED3\u5C3E\u7684\u7C7B\uFF0C\u5C06\u5176\u7C7B\u578B\u6CE8\u518C\u4E3A\u63D0\u4F9B\u6240\u6709\u516C\u5171\u63A5\u53E3\u751F\u6210\u670D\u52A1\uFF0C\u5176\u751F\u547D\u5468\u671F\u4E3ATransient\uFF0C</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span>scan <span class="token operator">=&gt;</span> scan
        <span class="token comment">//\u52A0\u8F7DStartup\u8FD9\u4E2A\u7C7B\u6240\u5728\u7684\u7A0B\u5E8F\u96C6</span>
        <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">FromAssemblyOf</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Startup<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u8868\u793A\u8981\u6CE8\u518C\u90A3\u4E9B\u7C7B\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u8FD8\u505A\u4E86\u8FC7\u6EE4\uFF0C\u53EA\u7559\u4E0B\u4E86\u4EE5 Service \u7ED3\u5C3E\u7684\u7C7B</span>
        <span class="token punctuation">.</span><span class="token function">AddClasses</span><span class="token punctuation">(</span>classes <span class="token operator">=&gt;</span> classes<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Service&quot;</span><span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">//\u8868\u793A\u5C06\u7C7B\u578B\u6CE8\u518C\u4E3A\u63D0\u4F9B\u5176\u6240\u6709\u516C\u5171\u63A5\u53E3\u4F5C\u4E3A\u670D\u52A1</span>
        <span class="token punctuation">.</span><span class="token function">AsImplementedInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">//\u8868\u793A\u6CE8\u518C\u7684\u751F\u547D\u5468\u671F\u4E3A Transient</span>
        <span class="token punctuation">.</span><span class="token function">WithTransientLifetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="itransientdependency" tabindex="-1"><a class="header-anchor" href="#itransientdependency" aria-hidden="true">#</a> ITransientDependency</h2><p>\u65B0\u5EFA\u4E00\u4E2A\u7A7A\u63A5\u53E3\uFF0C\u5F53\u5176\u4ED6\u7C7B\u7EE7\u627F\u6B64\u63A5\u53E3\u540E\uFF0C\u7EDF\u4E00\u6CE8\u5165\u5230DI\u4E2D\uFF0C\u4EE5Transient\u7684\u751F\u547D\u5468\u671F\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">LinCms<span class="token punctuation">.</span>Zero<span class="token punctuation">.</span>Dependency</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ITransientDependency</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ICurrentUser</span>
<span class="token punctuation">{</span>
    <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> GroupId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token return-type class-name"><span class="token keyword">bool</span><span class="token punctuation">?</span></span> IsAdmin <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> \u6A21\u62DF\u5B9E\u73B0</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CurrentUser</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICurrentUser</span><span class="token punctuation">,</span> <span class="token class-name">ITransientDependency</span></span>
    <span class="token punctuation">{</span>
     
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Id <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> GroupId <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span><span class="token punctuation">?</span></span> IsAdmin <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u626B\u63CF\u6240\u6709\u7EE7\u627FITransientDependency\u7684\u5B9E\u73B0\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>   services<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span>scan <span class="token operator">=&gt;</span> scan
       <span class="token comment">// We start out with all types in the assembly of ITransientService</span>
        <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">FromAssemblyOf</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ITransientDependency<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// AddClasses starts out with all public, non-abstract types in this assembly.</span>
        <span class="token comment">// These types are then filtered by the delegate passed to the method.</span>
        <span class="token comment">// In this case, we filter out only the classes that are assignable to ITransientService.</span>
        <span class="token punctuation">.</span><span class="token function">AddClasses</span><span class="token punctuation">(</span>classes <span class="token operator">=&gt;</span> classes<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AssignableTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ITransientDependency<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// We then specify what type we want to register these classes as.</span>
        <span class="token comment">// In this case, we want to register the types as all of its implemented interfaces.</span>
        <span class="token comment">// So if a type implements 3 interfaces; A, B, C, we&#39;d end up with three separate registrations.</span>
        <span class="token punctuation">.</span><span class="token function">AsImplementedInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// And lastly, we specify the lifetime of these registrations.</span>
        <span class="token punctuation">.</span><span class="token function">WithTransientLifetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u5982\u4F55\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u4F7F\u7528" aria-hidden="true">#</a> \u5982\u4F55\u4F7F\u7528</h2><p>\u5728\u5176\u4ED6\u7C7B\u4E2D\u4F7F\u7528\u6B64\u63A5\u53E3</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ApiController</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;cms/user&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ControllerBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ICurrentUser</span> _currentUser<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">UserController</span><span class="token punctuation">(</span><span class="token class-name">ICurrentUser</span> currentUser<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _currentUser <span class="token operator">=</span> currentUser<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> _currentUser<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="\u7EDF\u4E00\u6CE8\u5165" tabindex="-1"><a class="header-anchor" href="#\u7EDF\u4E00\u6CE8\u5165" aria-hidden="true">#</a> \u7EDF\u4E00\u6CE8\u5165</h2><p>\u5F53\u7136\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7EDF\u4E00\u6CE8\u5165\uFF0C\u800C\u975E\u5199\u4E8C\u6B21servics.Scan</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span>scan <span class="token operator">=&gt;</span> scan
            <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">FromAssemblyOf</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Startup<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AddClasses</span><span class="token punctuation">(</span>classes <span class="token operator">=&gt;</span> classes<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Service&quot;</span><span class="token punctuation">,</span>StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AsImplementedInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">WithTransientLifetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">FromAssemblyOf</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ITransientDependency<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AddClasses</span><span class="token punctuation">(</span>classes <span class="token operator">=&gt;</span> classes<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AssignableTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ITransientDependency<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AsImplementedInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">WithTransientLifetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,20);function I(S,C){const a=t("ExternalLinkIcon");return u(),c(o,null,[i,k,n("p",null,[n("a",d,[m,e(a)])]),n("ul",null,[n("li",null,[b,n("a",h,[g,e(a)])]),n("li",null,[f,n("a",y,[v,e(a)]),w])]),_],64)}var x=p(r,[["render",I],["__file","dependency-injection-scrutor.html.vue"]]);export{x as default};
