import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{d as s}from"./app.50f0ec32.js";const a={},p=s(`<h1 id="modularity-\u6A21\u5757\u5316" tabindex="-1"><a class="header-anchor" href="#modularity-\u6A21\u5757\u5316" aria-hidden="true">#</a> Modularity \u6A21\u5757\u5316</h1><h2 id="\u5355\u4F53\u6A21\u5757\u5316" tabindex="-1"><a class="header-anchor" href="#\u5355\u4F53\u6A21\u5757\u5316" aria-hidden="true">#</a> \u5355\u4F53\u6A21\u5757\u5316</h2><ul><li>https://github.com/thinktecture-labs/aspnetcore-modular-monolith</li></ul><p>\u56E0\u4E3A\u7C7B\u540D\u5982 Autofac \u548C aspnetcore \u4E2D\u7684\u7C7B\u76F8\u540C\uFF0C\u5C06\u7C7B\u540D\u4FEE\u6539\u6210\u5982\u4E0B\u540D\u79F0</p><ul><li>Module.cs--&gt;ModuleInfo.cs</li><li>IStartup.cs--&gt;IModuleStartup.cs</li></ul><p>\u521B\u5EFA\u4E00\u4E2A\u7C7B\u5E93\u540D Module1\uFF0C\u5E76\u5F15\u7528 AspNetCore \u5305</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameworkReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Microsoft.AspNetCore.App<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u96C6\u6210\u63A5\u53E3\uFF0C\u53EF\u5728<code>ConfigureServices</code>\u4E2D\u6CE8\u5165\u4EFB\u4F55\u670D\u52A1\uFF0C\u5728<code>Configure</code>\u65B9\u6CD5\u4E2D\u6CE8\u5165\u4E2D\u95F4\u4EF6</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Module1Startup</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IModuleStartup</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//services.AddSingleton&lt;ITestService, TestService&gt;();</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">IApplicationBuilder</span> app<span class="token punctuation">,</span> <span class="token class-name">IWebHostEnvironment</span> env<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        app<span class="token punctuation">.</span><span class="token function">UseEndpoints</span><span class="token punctuation">(</span>endpoints <span class="token operator">=&gt;</span>
            endpoints<span class="token punctuation">.</span><span class="token function">MapGet</span><span class="token punctuation">(</span><span class="token string">&quot;/TestEndpoint&quot;</span><span class="token punctuation">,</span>
                <span class="token keyword">async</span> context <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">await</span> context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World from TestEndpoint in Module 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RequireAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u4F7F\u7528\u63A7\u5236\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>Mvc</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;[module]/[controller]&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Controller</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ActionResult<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Hello World from TestController in Module 1&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// InterModule</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">[</span><span class="token function">HttpGet</span><span class="token punctuation">(</span><span class="token string">&quot;InterModule&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ActionResult<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">InterModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token number">0</span></span><span class="token punctuation">}</span></span><span class="token string"> in TestController in Module 1&quot;</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>\u4E3B\u7A0B\u5E8F<code>Program</code></li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Register a convention allowing to us to prefix routes to modules.</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IPostConfigureOptions<span class="token punctuation">&lt;</span>MvcOptions<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> ModuleRoutingMvcOptionsPostConfigure<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Adds module1 with the route prefix module-1</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Module1<span class="token punctuation">.</span>Module1Startup<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;module-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Adds module2 with the route prefix module-2</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Module2<span class="token punctuation">.</span>Module2Startup<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;module-2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>\u6CE8\u5165\u4E2D\u95F4\u4EF6</li></ul><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Adds endpoints defined in modules</span>
<span class="token class-name"><span class="token keyword">var</span></span> modules <span class="token operator">=</span> app<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IEnumerable<span class="token punctuation">&lt;</span>ModuleInfo<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> module <span class="token keyword">in</span> modules<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">module<span class="token punctuation">.</span>RoutePrefix</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> builder <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        builder<span class="token punctuation">.</span><span class="token function">UseRouting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        module<span class="token punctuation">.</span>Startup<span class="token punctuation">.</span><span class="token function">Configure</span><span class="token punctuation">(</span>builder<span class="token punctuation">,</span> app<span class="token punctuation">.</span>Environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,15);function t(e,o){return p}var u=n(a,[["render",t],["__file","Modularity.html.vue"]]);export{u as default};
