(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{635:function(n,s,t){"use strict";t.r(s);var e=t(10),a=Object(e.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("使用SPA+.NET Core3.1实现 GitHub第三方授权登录 类似使用AspNet.Security.OAuth.GitHub，前端使用如下：VUE+Vue-Router+axios")]),n._v(" "),t("h2",{attrs:{id:"aspnet-security-oauth-github"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aspnet-security-oauth-github"}},[n._v("#")]),n._v(" AspNet.Security.OAuth.GitHub")]),n._v(" "),t("ul",[t("li",[n._v("GitHub "),t("a",{attrs:{href:"https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers"),t("OutboundLink")],1)])]),n._v(" "),t("h2",{attrs:{id:"github授权登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github授权登录"}},[n._v("#")]),n._v(" GitHub授权登录")]),n._v(" "),t("p",[n._v("什么配置的过程不说了。。有一推。")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.jianshu.com/p/78d186aeb526",target:"_blank",rel:"noopener noreferrer"}},[n._v("GitHub 第三方登录"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.im/post/5dfb04cee51d45583a66c2f3",target:"_blank",rel:"noopener noreferrer"}},[n._v("给你的网站添加第三方登录以及短信验证功能"),t("OutboundLink")],1)])]),n._v(" "),t("p",[n._v("下面为示例")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("client_id:0be6b05fc717bfc4fb67\nclient_secret:dcaced9f176afba64e89d88b9b06ffc4a887a609\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("Get")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("https://github.com/login/oauth/authorize?client_id=0be6b05fc717bfc4fb67&redirect_uri=https://localhost:5001/signin-github\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("会重定向到")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://localhost:5001/signin-github?code=07537a84d12bbae08361",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://localhost:5001/signin-github?code=07537a84d12bbae08361"),t("OutboundLink")],1)]),n._v(" "),t("p",[n._v("这个code放到下面的请求中，获取access_token\nPOST方式（PostMan去请求）")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("https://github.com/login/oauth/access_token?client_id=0be6b05fc717bfc4fb67&client_secret=dcaced9f176afba64e89d88b9b06ffc4a887a609&code=07537a84d12bbae08361\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("Get方式")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("https://api.github.com/user?access_token=787506afa3271d077b98f18af56d7cfdc8db43b4\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("然后就能获取用户信息")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('{\n   "login": "luoyunchong",\n   "id": 18613266,\n   "node_id": "MDQ6VXNlcjE4NjEzMjY2",\n   "avatar_url": "https://avatars1.githubusercontent.com/u/18613266?v=4",\n   "gravatar_id": "",\n   "url": "https://api.github.com/users/luoyunchong",\n   "html_url": "https://github.com/luoyunchong",\n   "followers_url": "https://api.github.com/users/luoyunchong/followers",\n   "following_url": "https://api.github.com/users/luoyunchong/following{/other_user}",\n   "gists_url": "https://api.github.com/users/luoyunchong/gists{/gist_id}",\n   "starred_url": "https://api.github.com/users/luoyunchong/starred{/owner}{/repo}",\n   "subscriptions_url": "https://api.github.com/users/luoyunchong/subscriptions",\n   "organizations_url": "https://api.github.com/users/luoyunchong/orgs",\n   "repos_url": "https://api.github.com/users/luoyunchong/repos",\n   "events_url": "https://api.github.com/users/luoyunchong/events{/privacy}",\n   "received_events_url": "https://api.github.com/users/luoyunchong/received_events",\n   "type": "User",\n   "site_admin": false,\n   "name": "IGeekFan",\n   "company": null,\n   "blog": "https://blog.igeekfan.cn",\n   "location": null,\n   "email": "luoyunchong@foxmail.com",\n   "hireable": null,\n   "bio": "学习之路漫漫无期。",\n   "public_repos": 14,\n   "public_gists": 0,\n   "followers": 16,\n   "following": 11,\n   "created_at": "2016-04-22T10:33:44Z",\n   "updated_at": "2019-12-21T14:49:33Z"\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br")])]),t("h2",{attrs:{id:"net-core3-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#net-core3-1"}},[n._v("#")]),n._v(" .NET Core3.1")]),n._v(" "),t("p",[n._v("以下代码为主要代码，完整代码看下面的DEMO链接。")]),n._v(" "),t("p",[n._v("使用WebApi时，看了一些项目，全是基于MVC结构的，都不是我想要的。看了一些博客上面介绍 ,步骤都是千篇一律，都是配合前后端分离的。")]),n._v(" "),t("ul",[t("li",[n._v("前端运行在:http://localhost:8081")]),n._v(" "),t("li",[n._v("后端运行在:https://localhost:5001")])]),n._v(" "),t("h3",{attrs:{id:"前后端分离的spa-配合第三方授权登录流程如下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离的spa-配合第三方授权登录流程如下"}},[n._v("#")]),n._v(" 前后端分离的SPA 配合第三方授权登录流程如下")]),n._v(" "),t("p",[n._v("本地测试时，gitHub回调地址设置 http(s)😕/ip:端口/signin-github")]),n._v(" "),t("ul",[t("li",[n._v("如: https://localhost:5001/signin-github。")])]),n._v(" "),t("h4",{attrs:{id:"_1-上面这个明明填写的后端的地址-那后端怎么把结果通知前端呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-上面这个明明填写的后端的地址-那后端怎么把结果通知前端呢"}},[n._v("#")]),n._v(" 1. 上面这个明明填写的后端的地址，那后端怎么把结果通知前端呢？")]),n._v(" "),t("p",[n._v("前端请求"),t("strong",[n._v("https://localhost:5001/signin?provider=GitHub&redirectUrl=http://localhost:8080/login-result")])]),n._v(" "),t("ul",[t("li",[n._v("提供参数provider为GitHub，")]),n._v(" "),t("li",[n._v("redirectUrl为GitHub授权登录后，回调signin-github后，后端再去重定向的地址，这里填前端的一个路由。")])]),n._v(" "),t("h4",{attrs:{id:"_2-后端只提供了signin-signin-callback路由-没有signin-github-那github上配置的路由是怎么回调回来呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-后端只提供了signin-signin-callback路由-没有signin-github-那github上配置的路由是怎么回调回来呢"}},[n._v("#")]),n._v(" 2. 后端只提供了signin，signin-callback路由，没有signin-github，那github上配置的路由是怎么回调回来呢？")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/aspnet/core/security/authentication/social/google-logins?view=aspnetcore-3.1",target:"_blank",rel:"noopener noreferrer"}},[n._v("google-登录，微软文档"),t("OutboundLink")],1),n._v("，其中有一个"),t("strong",[n._v("更改默认回调 URI")]),n._v(",通过 AddGitHub中的CallbackPath属性配置。")]),n._v(" "),t("p",[n._v("介绍了回调地址应配置signin-google,所以这里应该是signin-github，他是可以配置的，不需要自己写程序处理signin-google这个路由，内部有中间件已经处理了。")]),n._v(" "),t("h4",{attrs:{id:"_3-回调到signin-github后-后端怎么处理-才能让前端刷新。获取登录后的信息呢。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-回调到signin-github后-后端怎么处理-才能让前端刷新。获取登录后的信息呢。"}},[n._v("#")]),n._v(" 3. 回调到signin-github后，后端怎么处理，才能让前端刷新。获取登录后的信息呢。")]),n._v(" "),t("p",[n._v("具体上面的根据code获取access_token，根据access_token获取用户的信息的过程，这些处理的过程，都不需要我们自己处理。我们可以用直接获取用户信息。")]),n._v(" "),t("p",[n._v("一个方法SignIn,只要"),t("strong",[n._v("return Challenge(properties, provider);")]),n._v("，")]),n._v(" "),t("ul",[t("li",[n._v("provider 为 GitHub，")]),n._v(" "),t("li",[n._v("properties  var properties = new AuthenticationProperties { RedirectUri = url };")])]),n._v(" "),t("p",[n._v("这个url为另一个获取用户信息的路由，只要拼接好地址即可。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var authenticateResult = await _contextAccessor.HttpContext.AuthenticateAsync(provider);\nstring email = authenticateResult.Principal.FindFirst(ClaimTypes.Email)?.Value;\nstring name = authenticateResult.Principal.FindFirst(ClaimTypes.Name)?.Value;\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("p",[n._v("需要注入")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("private readonly IHttpContextAccessor _contextAccessor;\npublic AuthenticationController( IHttpContextAccessor contextAccessor)\n{\n    _contextAccessor = contextAccessor;\n}\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("h3",{attrs:{id:"代码部署-简化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码部署-简化"}},[n._v("#")]),n._v(" 代码部署（简化）")]),n._v(" "),t("p",[n._v("打开NuGet包管理,安装包")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("Install-Package AspNet.Security.OAuth.GitHub\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("appSettings.json")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('"Authentication": {\n    "GitHub": {\n      "ClientId": "0be6b05fc717bfc4fb67",\n      "ClientSecret": "dcaced9f176afba64e89d88b9b06ffc4a887a609"\n    }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br")])]),t("p",[n._v("add扩展方法")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('public static class JwtConfiguration\n{\n    public static void AddJwtConfiguration(this IServiceCollection services, IConfiguration configuration)\n    {\n\n        services.AddAuthentication(opts =>\n            {\n                opts.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\n                opts.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\n            }).AddCookie(options =>\n        {\n            options.LoginPath = "/signin";\n            options.LogoutPath = "/signout";\n        }).AddGitHub(options =>\n        {\n            options.ClientId = configuration["Authentication:GitHub:ClientId"];\n            options.ClientSecret = configuration["Authentication:GitHub:ClientSecret"];\n        });\n    }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br")])]),t("p",[n._v("默认情况下，如头像，email，是没有获取的。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('.AddGitHub(options =>\n{\n    options.ClientId = configuration["Authentication:GitHub:ClientId"];\n    options.ClientSecret = configuration["Authentication:GitHub:ClientSecret"];\n    //options.CallbackPath = new PathString("~/signin-github");//与GitHub上的回调地址相同，默认即是/signin-github\n    options.Scope.Add("user:email");\n    //authenticateResult.Principal.FindFirst(LinConsts.Claims.AvatarUrl)?.Value;  得到GitHub头像\n    options.ClaimActions.MapJsonKey(LinConsts.Claims.AvatarUrl, "avatar_url");\n    options.ClaimActions.MapJsonKey(LinConsts.Claims.BIO, "bio");\n    options.ClaimActions.MapJsonKey(LinConsts.Claims.BlogAddress, "blog");\n});\n\n#其中LinConsts类为静态常量\npublic static class LinConsts\n{\n    public static class Claims\n    {\n        public const string BIO = "urn:github:bio";\n        public const string AvatarUrl = "urn:github:avatar_url";\n        public const string BlogAddress = "urn:github:blog";\n    }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br")])]),t("p",[n._v("startup.cs")]),n._v(" "),t("p",[n._v("ConfigureServices中配置此服务")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();\n    services.AddJwtConfiguration(Configuration);\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("创建AuthenticationController.cs\n增加SignIn，用于处理用户授权成功后，重定回signin-callback,并将参数带回。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('        private readonly IHttpContextAccessor _contextAccessor;\n        private readonly IConfiguration _configuration;\n\n        public AuthenticationController(IHttpContextAccessor contextAccessor, IConfiguration configuration)\n        {\n            _contextAccessor = contextAccessor;\n            _configuration = configuration;\n        }\n        \n        [HttpGet("~/signin")]\n        public async Task<IActionResult> SignIn(string provider, string redirectUrl)\n        {\n            var request = _contextAccessor.HttpContext.Request;\n            var url =\n                $"{request.Scheme}://{request.Host}{request.PathBase}{request.Path}-callback?provider={provider}&redirectUrl={redirectUrl}";\n            var properties = new AuthenticationProperties { RedirectUri = url };\n            properties.Items["LoginProviderKey"] = provider;\n            return Challenge(properties, provider);\n\n        }\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br")])]),t("p",[n._v("在signin方法中，用户点击授权后（第一次），会根据其传递的URL，重定向到这个地址，signin-callback,参数也会一同携带。provider为GitHub,redirectUrl为：http://localhost:8081/login-result.")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('[HttpGet("~/signin-callback")]\npublic async Task<IActionResult> Home(string provider = null, string redirectUrl = "")\n{\n    var authenticateResult = await _contextAccessor.HttpContext.AuthenticateAsync(provider);\n    if (!authenticateResult.Succeeded) return Redirect(redirectUrl);\n    var openIdClaim = authenticateResult.Principal.FindFirst(ClaimTypes.NameIdentifier);\n    if (openIdClaim == null || string.IsNullOrWhiteSpace(openIdClaim.Value))\n        return Redirect(redirectUrl);\n\n    //TODO 记录授权成功后的信息 \n\n    string email = authenticateResult.Principal.FindFirst(ClaimTypes.Email)?.Value;\n    string name = authenticateResult.Principal.FindFirst(ClaimTypes.Name)?.Value;\n    string gitHubName = authenticateResult.Principal.FindFirst(GitHubAuthenticationConstants.Claims.Name)?.Value;\n    string gitHubUrl = authenticateResult.Principal.FindFirst(GitHubAuthenticationConstants.Claims.Url)?.Value;\n    //startup 中 AddGitHub配置项  options.ClaimActions.MapJsonKey(LinConsts.Claims.AvatarUrl, "avatar_url");\n    string avatarUrl = authenticateResult.Principal.FindFirst(LinConsts.Claims.AvatarUrl)?.Value;\n\n    return Redirect($"{redirectUrl}?openId={openIdClaim.Value}");\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br")])]),t("p",[n._v("这时候我们能获取用户信息了。那么前端怎么办呢。我们写个方法，获取用户信息，看看效果。")]),n._v(" "),t("ul",[t("li",[n._v("浏览器直接打开能得到github的id。")]),n._v(" "),t("li",[n._v("axios GET请求 https://localhost:5001/OpenId 得到null")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('[HttpGet("~/OpenId")]\npublic async Task<string> OpenId(string provider = null)\n{\n   var authenticateResult = await _contextAccessor.HttpContext.AuthenticateAsync(provider);\n   if (!authenticateResult.Succeeded) return null;\n   var openIdClaim = authenticateResult.Principal.FindFirst(ClaimTypes.NameIdentifier);\n   return openIdClaim?.Value;\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br")])]),t("p",[n._v("我记得之前传Token时，后台是可以这样获取的。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('[HttpGet("~/GetOpenIdByToken")]\npublic string GetOpenIdByToken()\n{\n    return User.FindFirst(ClaimTypes.NameIdentifier)?.Value;\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("LoginResult.vue在created生命周期中。都是得到null")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('axios({\n  methods: "get",\n  url: "https://localhost:5001/OpenId?provider=GitHub"\n})\n  .then(function(response) {\n    // handle success\n    console.log(response);\n  })\n\naxios({\n  methods: "get",\n  url: "https://localhost:5001/GetOpenIdByToken"\n})\n  .then(function(response) {\n    // handle success\n    console.log(response);\n  })\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br")])]),t("h3",{attrs:{id:"为什么呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么呢"}},[n._v("#")]),n._v(" 为什么呢？？？")]),n._v(" "),t("p",[n._v("因为前后端分离，不是基于Cookies的。http是无状态的。每次请求无法区分用户的。我们可以根据当前的ClaimsPrincipal，根据JWT生成相应的Token，axios请求时，放到headers中。")]),n._v(" "),t("p",[n._v("安装包")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("Install-Package Microsoft.AspNetCore.Authentication.JwtBearer\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("AppSettings.json配置改成")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('"Authentication": {\n"JwtBearer": {\n  "SecurityKey": "JWTStudyWebsite_DI20DXU3",\n  "Issuer": "JWTStudy",\n  "Audience": "JWTStudyWebsite"\n},\n"GitHub": {\n  "ClientId": "0be6b05fc717bfc4fb67",\n  "ClientSecret": "dcaced9f176afba64e89d88b9b06ffc4a887a609"\n}\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br")])]),t("p",[n._v("在signin-callback路由中，得到authenticateResult.Principal，其中默认包含了(id,login,name,url)，授权得到eamil，另外MapJsonKey扩展了以下字段（avatar_url、bio、blog)")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var authenticateResult = await _contextAccessor.HttpContext.AuthenticateAsync(provider);\nstring token = this.CreateToken(authenticateResult.Principal);\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("根据ClaimsPrincipal值生成token值。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('private string CreateToken(ClaimsPrincipal claimsPrincipal)\n{\n\n    var handler = new JwtSecurityTokenHandler();\n    var key = new SymmetricSecurityKey(\n        Encoding.UTF8.GetBytes(_configuration["Authentication:JwtBearer:SecurityKey"]));\n    var credentials = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\n    var token = new JwtSecurityToken(\n        _configuration["Authentication:JwtBearer:Issuer"],\n        _configuration["Authentication:JwtBearer:Audience"],\n        claimsPrincipal.Claims,\n        expires: DateTime.Now.AddMinutes(30),\n        signingCredentials: credentials\n    );\n\n    return handler.WriteToken(token);\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br")])]),t("p",[n._v("这里的claimsPrincipal是什么呢。简单的说就是一个存有github授权信息的对象，可以解析出对应的Clamis，这里其实就是用了Clamis的属性值。")]),n._v(" "),t("table",[t("thead",[t("tr",[t("th",[n._v("Claim")]),n._v(" "),t("th",[n._v("ClaimsIdentity")]),n._v(" "),t("th",[n._v("ClaimsPrincipal")])])]),n._v(" "),t("tbody",[t("tr",[t("td",[n._v("id、name,url,email,avatar_url等")]),n._v(" "),t("td",[n._v("由多组Claim组成，这里可指GitHub授权登录后得到的那个对象。")]),n._v(" "),t("td",[n._v("ClaimsIdentity的持有者")])])])]),n._v(" "),t("p",[n._v("具体Jwt的生成与配置项。这里不详细说明。可以看这个示例（.NET Core2.2）"),t("a",{attrs:{href:"https://github.com/luoyunchong/BasicTemplate",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/luoyunchong/BasicTemplate"),t("OutboundLink")],1)]),n._v(" "),t("p",[n._v("AddJwtConfiguration改成如下内容")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('public static void AddJwtConfiguration(this IServiceCollection services, IConfiguration configuration)\n{\n\n    services.AddAuthentication(opts =>\n        {\n            opts.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\n            opts.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\n        }).AddCookie(options =>\n    {\n        options.LoginPath = "/signin";\n        options.LogoutPath = "/signout";\n    }).AddJwtBearer(JwtBearerDefaults.AuthenticationScheme, options =>\n    {\n        options.Audience = configuration["Authentication:JwtBearer:Audience"];\n\n        options.TokenValidationParameters = new TokenValidationParameters\n        {\n            // The signing key must match!\n            ValidateIssuerSigningKey = true,\n            IssuerSigningKey = new SymmetricSecurityKey(\n                Encoding.ASCII.GetBytes(configuration["Authentication:JwtBearer:SecurityKey"])),\n\n            // Validate the JWT Issuer (iss) claim\n            ValidateIssuer = true,\n            ValidIssuer = configuration["Authentication:JwtBearer:Issuer"],\n\n            // Validate the JWT Audience (aud) claim\n            ValidateAudience = true,\n            ValidAudience = configuration["Authentication:JwtBearer:Audience"],\n\n            // Validate the token expiry\n            ValidateLifetime = true,\n\n            // If you want to allow a certain amount of clock drift, set that here\n            //ClockSkew = TimeSpan.Zero\n        };\n    }).AddGitHub(options =>\n    {\n        options.ClientId = configuration["Authentication:GitHub:ClientId"];\n        options.ClientSecret = configuration["Authentication:GitHub:ClientSecret"];\n        //options.CallbackPath = new PathString("~/signin-github");//与GitHub上的回调地址相同，默认即是/signin-github\n        options.Scope.Add("user:email");\n        //authenticateResult.Principal.FindFirst(LinConsts.Claims.AvatarUrl)?.Value;  得到GitHub头像\n        options.ClaimActions.MapJsonKey(LinConsts.Claims.AvatarUrl, "avatar_url");\n        options.ClaimActions.MapJsonKey(LinConsts.Claims.BIO, "bio");\n        options.ClaimActions.MapJsonKey(LinConsts.Claims.BlogAddress, "blog");\n    });\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br")])]),t("p",[t("a",{attrs:{href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/aspnetcore-oatuth2/spa-vue-oauth2/src/components/LoginResult.vue",target:"_blank",rel:"noopener noreferrer"}},[n._v("前端LoginResult.vue代码"),t("OutboundLink")],1)]),n._v(" "),t("p",[n._v("前端运行")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("yarn install\nyarn serve\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("点击GitHub登录")]),n._v(" "),t("p",[n._v("GetOpenIdByToken根据生成的token值，解析出了用户id,这样前端在login-result这个组件中，把token保存好，并重定向自己的主页，获取用户所有信息即可。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('data: 18613266\nstatus: 200\nconfig: {url: "https://localhost:5001/GetOpenIdByToken"}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("p",[n._v("OpenId?provider=GitHub则得不到数据，只能浏览器直接请求https://localhost:5001/OpenId?provider=GitHub，才能到github 的id。这个适应于前后端不分离，或者属于之前我们经常使用MVC结构，同一域名下，同一端口，基于Cookies登录的判断。")]),n._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[n._v("#")]),n._v(" 参考")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/rsls/p/10522649.html",target:"_blank",rel:"noopener noreferrer"}},[n._v(".net Core2.2 WebApi通过OAuth2.0实现微信登录"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_30414305/article/details/101389325",target:"_blank",rel:"noopener noreferrer"}},[n._v("AspNetCore3.0 和 JWT"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("a",{attrs:{href:"http://www.woshipm.com/pd/509712.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("用户系统设计：第三方授权、账号绑定及解绑（下）"),t("OutboundLink")],1)])]),n._v(" "),t("h2",{attrs:{id:"demo-示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-示例"}},[n._v("#")]),n._v(" Demo  示例")]),n._v(" "),t("ul",[t("li",[n._v("GitHub "),t("a",{attrs:{href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/aspnetcore-oatuth2",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/luoyunchong/dotnetcore-examples/blob/master/aspnetcore-oatuth2"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=a.exports}}]);