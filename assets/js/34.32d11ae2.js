(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{611:function(n,s,e){"use strict";e.r(s);var t=e(10),a=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"方法级别的权限控制-api级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法级别的权限控制-api级别"}},[n._v("#")]),n._v(" 方法级别的权限控制（API级别）")]),n._v(" "),e("p",[n._v("Lin的定位在于实现一整套 CMS的解决方案，它是一个设计方案，提供了不同的后端，不同的前端，而且也支持不同的数据库")]),n._v(" "),e("p",[n._v("目前官方团队维护 lin-cms-vue,lin-cms-spring-boot,lin-cms-koa,lin-cms-flask\n社区维护了 lin-cms-tp5,lin-cms-react,lin-cms-dotnetcore，即已支持vue,react二种前端框架，java,nodejs,python,php,c#等五种后端语言。")]),n._v(" "),e("p",[n._v("下面我们来讲一下.NET Core这个项目中权限控制的实现。")]),n._v(" "),e("p",[n._v("对于CMS来说，一个完善的权限模块是必不可少的，是系统内置实现的。为了更加简单地理解权限，我们先来理解一下ASP.NET Core有哪些权限控制。")]),n._v(" "),e("p",[n._v("1."),e("strong",[n._v("AuthorizeAttribute")]),n._v("的作用？")]),n._v(" "),e("p",[n._v("这个特性标签授权通过属性参数配置，可应用于控制器或操作方法上，对用户的身份进行验证。")]),n._v(" "),e("p",[n._v("如果没有授权，会返回403状态码，我们可以通过重写，来实现返回JSON字符串，让前台提示。前提是请求中间件配置了如下二行。")]),n._v(" "),e("ul",[e("li",[e("p",[e("strong",[n._v("app.UseAuthentication();")]),n._v(" 认证，明确是谁在操作，认证方式如用户名密码,登录后，可以得到一个token，或者写入cookies，这样可以确定这个用户是谁")])]),n._v(" "),e("li",[e("p",[e("strong",[n._v("app.UseAuthorization();")]),n._v(" 授权中间件，明确你是否有某个权限。在http请求时，中间件会在带有权限特性标签 "),e("strong",[n._v("[Authorize]")]),n._v(" 的操作，进行权限判断，包括角色，策略等。")])])]),n._v(" "),e("p",[n._v("该控制器下的操作都必须经过身份验证，")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("[Authorize]\npublic class AccountController : Controller\n{\n    public ActionResult Login()\n    {\n    }\n\n    public ActionResult Logout()\n    {\n    }\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])]),e("p",[n._v("这样只显示单个方法必须应用授权。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("public class AccountController : Controller\n{\n   public ActionResult Login()\n   {\n   }\n\n   [Authorize]\n   public ActionResult Logout()\n   {\n   }\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])]),e("p",[n._v("如果我们通过"),e("strong",[n._v("AllowAnonymous")]),n._v("特性标签去掉身份验证。Login方法无须进行验证。即可匿名访问。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("[Authorize]\npublic class AccountController : Controller\n{\n    [AllowAnonymous]\n    public ActionResult Login()\n    {\n    }\n\n    public ActionResult Logout()\n    {\n    }\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[n._v("基于角色的授权")])]),n._v(" "),e("p",[n._v("我们可以通过给这个特性标签加参数，配置，某个方法，控制器是否有这个角色，如果有此角色才能访问这些资源。")]),n._v(" "),e("p",[n._v("单个角色")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('[Authorize(Roles = "Administrator")]\npublic class AdministrationController : Controller\n{\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br")])]),e("p",[n._v("多个角色，我们可以这样配置,即用逗号分隔。用户有其中一个角色即可访问。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('[Authorize(Roles = "HRManager,Finance")]\npublic class SalaryController : Controller\n{\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br")])]),e("p",[n._v("当某个方法必须同时有二个角色怎么办呢。该控制器只有同时有PowerUser，和ControlPanelUser的角色才能访问这些资源了。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('[Authorize(Roles = "PowerUser")]\n[Authorize(Roles = "ControlPanelUser")]\npublic class ControlPanelController : Controller\n{\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("ul",[e("li",[n._v("3.更多。请看官网 "),e("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/aspnet/core/security/authorization/roles?view=aspnetcore-3.1",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://docs.microsoft.com/zh-cn/aspnet/core/security/authorization/roles?view=aspnetcore-3.1"),e("OutboundLink")],1)])]),n._v(" "),e("p",[n._v("更多该特性标签的介绍，也可参考官网，这里就不展开了。")]),n._v(" "),e("p",[n._v("那这个角色，到底在哪配置的？？")]),n._v(" "),e("p",[n._v("登录时生成的Token,是基于JWT的，其中的Claim的type为"),e("strong",[n._v("ClaimTypes.Role")]),n._v("（枚举值），角色名称为字符串，与特性标签中的Roles属性值相同。\n如")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('new Claim(ClaimTypes.Role, "Administrator");\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[n._v("有多个角色时，**List Claim ** 多加几个 "),e("strong",[n._v('new Claim(ClaimTypes.Role, "PowerUser");')]),n._v(" 也是支持的。user为用户信息，LinGroups为当前用户的分组（多个）")]),n._v(" "),e("p",[n._v("即如下代码示例，多个分组（角色）")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('var claims = new List<Claim>()\n{\n    new Claim(ClaimTypes.NameIdentifier, user.Email ?? ""),\n    new Claim(ClaimTypes.GivenName, user.Nickname ?? ""),\n    new Claim(ClaimTypes.Name, user.Username ?? ""),\n};\n\nuser.LinGroups?.ForEach(r =>\n {\n     claims.Add(new Claim(ClaimTypes.Role, r.Name));\n });\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])]),e("h3",{attrs:{id:"authorizeattribute源码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authorizeattribute源码"}},[n._v("#")]),n._v(" AuthorizeAttribute源码")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(" [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true, Inherited = true)]\n  public class AuthorizeAttribute : Attribute, IAuthorizeData\n  {\n    public AuthorizeAttribute()\n    {\n    }\n\n    public AuthorizeAttribute(string policy)\n    {\n      this.Policy = policy;\n    }\n\n    public string Policy { get; set; }\n\n    public string Roles { get; set; }\n\n    public string AuthenticationSchemes { get; set; }\n  }\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br")])]),e("p",[n._v("我们可以看到，它继承了Attribute，说明这是一个特性标签，IAuthorizeData是一个接口，有这三个属性，约束了 一个规范，即有角色Roles，有策略Policy，有身份验证方案AuthenticationSchemes，该特性支持Class,支持方法，该特性标签支持多个共用，该特性标签支持被继承。")]),n._v(" "),e("p",[n._v("基于角色的授权和基于声明的授权是一种预配置的策略，即固定的角色，固定的Claims验证。")]),n._v(" "),e("p",[n._v("我们可以基于自定义策略的实现更多的权限验证或某些规则验证。")]),n._v(" "),e("p",[n._v("AuthorizeAttribute能做的权限控制如下")]),n._v(" "),e("ul",[e("li",[n._v("基于角色级别的权限控制（多个角色，单个角色）")]),n._v(" "),e("li",[n._v("基于声明的授权：可自定义声明特性。")]),n._v(" "),e("li",[n._v("基于策略的授权：")])]),n._v(" "),e("h2",{attrs:{id:"lin-cms-dotnetcore中的权限设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lin-cms-dotnetcore中的权限设计"}},[n._v("#")]),n._v(" lin-cms-dotnetcore中的权限设计")]),n._v(" "),e("p",[n._v("说了这么多官方提供的，我们讲一下lin-cms-dotnetcore中的权限设计")]),n._v(" "),e("p",[n._v("完整的表结构如下\n"),e("a",{attrs:{href:"https://luoyunchong.github.io/vovo-docs/dotnetcore/lin-cms/table.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://luoyunchong.github.io/vovo-docs/dotnetcore/lin-cms/table.html"),e("OutboundLink")],1)]),n._v(" "),e("h4",{attrs:{id:"lincmsauthorizeattribute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lincmsauthorizeattribute"}},[n._v("#")]),n._v(" LinCmsAuthorizeAttribute")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(' [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true)]\n    public class LinCmsAuthorizeAttribute : Attribute, IAsyncAuthorizationFilter\n    {\n        public string Permission { get; }\n        public string Module { get; }\n\n        public LinCmsAuthorizeAttribute(string permission, string module)\n        {\n            Permission = permission;\n            Module = module;\n        }\n\n        public async Task OnAuthorizationAsync(AuthorizationFilterContext context)\n        {\n            ClaimsPrincipal claimsPrincipal = context.HttpContext.User;\n\n            if (!claimsPrincipal.Identity.IsAuthenticated)\n            {\n                HandlerAuthenticationFailed(context, "认证失败，请检查请求头或者重新登陆", ErrorCode.AuthenticationFailed);\n                return;\n            }\n\n            IAuthorizationService authorizationService = (IAuthorizationService)context.HttpContext.RequestServices.GetService(typeof(IAuthorizationService));\n            AuthorizationResult authorizationResult = await authorizationService.AuthorizeAsync(context.HttpContext.User, null, new OperationAuthorizationRequirement() { Name = Permission });\n            if (!authorizationResult.Succeeded)\n            {\n                HandlerAuthenticationFailed(context, $"您没有权限：{Module}-{Permission}", ErrorCode.NoPermission);\n            }\n        }\n\n        public void HandlerAuthenticationFailed(AuthorizationFilterContext context, string errorMsg, ErrorCode errorCode)\n        {\n            context.HttpContext.Response.StatusCode = StatusCodes.Status401Unauthorized;\n            context.Result = new JsonResult(new UnifyResponseDto(errorCode, errorMsg, context.HttpContext));\n        }\n    }\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br")])]),e("p",[n._v("上面的实现非常简单,LinCmsAuthorizeAttribute继承于Attribute，说明是一个特性标签，有二个属性Permission，Module，代表权限名，模块名（用于区分哪个功能模块），然后将权限名称转化为OperationAuthorizationRequirement，然后调用authorizationService中的方法AuthorizeAsync来完成授权。")]),n._v(" "),e("p",[n._v("接下来，我们在控制器上使用LinCmsAuthorizeAttribute,那么我们")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('[Route("cms/admin/group")]\n[ApiController]\npublic class GroupController : ControllerBase\n{\n    private readonly IGroupService _groupService;\n    public GroupController(IGroupService groupService)\n    {\n        _groupService = groupService;\n    }\n\n    [HttpGet("all")]\n    [LinCmsAuthorize("查询所有权限组","管理员")]\n    public Task<List<LinGroup>> GetListAsync()\n    {\n        return _groupService.GetListAsync();\n    }\n\n    [HttpGet("{id}")]\n    [LinCmsAuthorize("查询一个权限组及其权限","管理员")]\n    public async Task<GroupDto> GetAsync(long id)\n    {\n        GroupDto groupDto = await _groupService.GetAsync(id);\n        return groupDto;\n    }\n\n    [HttpPost]\n    [LinCmsAuthorize("新建权限组","管理员")]\n    public async Task<UnifyResponseDto> CreateAsync([FromBody] CreateGroupDto inputDto)\n    {\n        await _groupService.CreateAsync(inputDto);\n        return UnifyResponseDto.Success("新建分组成功");\n    }\n\n    [HttpPut("{id}")]\n    [LinCmsAuthorize("更新一个权限组","管理员")]\n    public async Task<UnifyResponseDto> UpdateAsync(long id, [FromBody] UpdateGroupDto updateGroupDto)\n    {\n        await _groupService.UpdateAsync(id, updateGroupDto);\n        return UnifyResponseDto.Success("更新分组成功");\n    }\n\n    [HttpDelete("{id}")]\n    [LinCmsAuthorize("删除一个权限组","管理员")]\n    public async Task<UnifyResponseDto> DeleteAsync(long id)\n    {\n        await _groupService.DeleteAsync(id);\n        return UnifyResponseDto.Success("删除分组成功");\n    }\n\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br")])]),e("p",[n._v("这样在方法上已经加了权限的标签，但我们怎么得到系统中的所有权限，让用户配置呢。\n"),e("a",{attrs:{href:"https://igeekfan.gitee.io/vovo-docs/dotnetcore/lin-cms/reflex-assembly-get-controller-methods-attribute.html#%E8%8E%B7%E5%8F%96%E6%8E%A7%E5%88%B6%E5%99%A8%E5%8F%8A%E6%96%B9%E6%B3%95%E7%89%B9%E6%80%A7%E6%A0%87%E7%AD%BE",target:"_blank",rel:"noopener noreferrer"}},[n._v("获取控制器及方法特性标签"),e("OutboundLink")],1),n._v("。本质上，是通过反射,扫描当前程序集，会获取到一个List，我们可以在系统启动时把这些数据存到数据库中。")]),n._v(" "),e("p",[n._v("最新的方式是采用此方法，原理都相同。name，module唯一值。存入lin_permission表中，这时就有id值了。lin_group_permission就能用分组关联了。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("public async Task SeedAsync()\n{\n    List<PermissionDefinition> linCmsAttributes = ReflexHelper.GeAssemblyLinCmsAttributes();\n\n    List<LinPermission> insertPermissions = new List<LinPermission>();\n    List<LinPermission>allPermissions=await  _permissionRepository.Select.ToListAsync();\n    \n    linCmsAttributes.ForEach(r =>\n    {\n        bool exist = allPermissions.Any(u => u.Module == r.Module && u.Name == r.Permission);\n        if (!exist)\n        {\n            insertPermissions.Add(new LinPermission(r.Permission, r.Module));\n        }\n    });\n    await _permissionRepository.InsertAsync(insertPermissions);\n }\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br")])]),e("h3",{attrs:{id:"实现方法级的权限控制源码解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现方法级的权限控制源码解析"}},[n._v("#")]),n._v(" 实现方法级的权限控制源码解析")]),n._v(" "),e("p",[n._v("原理可以看这个文章"),e("a",{attrs:{href:"https://www.cnblogs.com/RainingNight/p/dynamic-authorization-in-asp-net-core.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("ASP.NET Core 认证与授权[7]:动态授权"),e("OutboundLink")],1),n._v("中的"),e("strong",[n._v("自定义授权过滤器")])]),n._v(" "),e("p",[n._v("我们需要了解一下这些类/接口/抽象类")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("- IAuthorizationService(interface)\n- AuthorizationService(class)\n- IAuthorizationHandler(interface)\n- AuthorizationHandler<TRequirement>(abstract class)\n- PermissionAuthorizationHandler（class 自定义的类,继承AuthorizationHandler）\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("h3",{attrs:{id:"总结调用链如下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结调用链如下"}},[n._v("#")]),n._v(" 总结调用链如下")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("LinCmsAuthorizeAttribute（继承了IAsyncAuthorizationFilter的特性标签）\n调用了----\x3e\nIAuthorizationService中的AuthorizeAsync方法\n调用了----\x3e\nIAuthorizationHandler中的HandleAsync\n调用了----\x3e\nAuthorizationHandler中的HandleRequirementAsync抽象方法\n相当于调用----\x3e\nPermissionAuthorizationHandler类中的实现方法HandleRequirementAsync\n调用了----\x3e\nIPermissionService类中的CheckPermissionAsync方法。\n调用了----\x3e\nIAuditBaseRepository<LinPermission,long>\nIAuditBaseRepository<LinGroupPermission, long>\n使用FreeSql,判断当前用户所在分组是否拥有此权限。\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])]),e("p",[n._v("IAuthorizationService是什么呢。我们可以理解为，验证当前用户是否拥有对应的资源权限。系统默认实现了该方法")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("public interface IAuthorizationService\n{\n    Task<AuthorizationResult> AuthorizeAsync(ClaimsPrincipal user, object resource, IEnumerable<IAuthorizationRequirement> requirements);\n\n    Task<AuthorizationResult> AuthorizeAsync(ClaimsPrincipal user, object resource, string policyName);\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br")])]),e("p",[n._v("AuthorizationService是什么呢.他实现了IAuthorizationService接口.\n通过源码我们知道，它调用 "),e("strong",[n._v("await authorizationHandler.HandleAsync(authContext);")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(" public async Task<AuthorizationResult> AuthorizeAsync(\n  ClaimsPrincipal user,\n  object resource,\n  IEnumerable<IAuthorizationRequirement> requirements)\n{\n  if (requirements == null)\n    throw new ArgumentNullException(nameof (requirements));\n  AuthorizationHandlerContext authContext = this._contextFactory.CreateContext(requirements, user, resource);\n  foreach (IAuthorizationHandler authorizationHandler in await this._handlers.GetHandlersAsync(authContext))\n  {\n    await authorizationHandler.HandleAsync(authContext);\n    if (!this._options.InvokeHandlersAfterFailure)\n    {\n      if (authContext.HasFailed)\n        break;\n    }\n  }\n  AuthorizationResult authorizationResult = this._evaluator.Evaluate(authContext);\n  if (authorizationResult.Succeeded)\n    this._logger.UserAuthorizationSucceeded();\n  else\n    this._logger.UserAuthorizationFailed();\n  return authorizationResult;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br")])]),e("p",[n._v("IAuthorizationHandler 仅一个接口。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public interface IAuthorizationHandler\n{\n    /// <summary>\n    /// Makes a decision if authorization is allowed.\n    /// </summary>\n    /// <param name="context">The authorization information.</param>\n    Task HandleAsync(AuthorizationHandlerContext context);\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])]),e("p",[n._v("AuthorizationHandler，它继承"),e("strong",[n._v("IAuthorizationHandler")]),n._v("\n而且他是一个抽象类，默认实现了HandleAsync方法，子类只用实现HandleRequirementAsync即可。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("  public abstract class AuthorizationHandler<TRequirement> : IAuthorizationHandler\n    where TRequirement : IAuthorizationRequirement\n  {\n    public virtual async Task HandleAsync(AuthorizationHandlerContext context)\n    {\n      foreach (TRequirement requirement in context.Requirements.OfType<TRequirement>())\n        await this.HandleRequirementAsync(context, requirement);\n    }\n\n    protected abstract Task HandleRequirementAsync(\n      AuthorizationHandlerContext context,\n      TRequirement requirement);\n  }\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br")])]),e("p",[n._v("我们就可以继承AuthorizationHandler，子类实现从数据库中取数据做对比，其中泛型参数使用系统内置的一个只有Name的类OperationAuthorizationRequirement，当然，如果我们需要更多的参数，可以继承IAuthorizationRequirement，增加更多的参数。")]),n._v(" "),e("p",[n._v("判断当前用户是否不为null,当调用CheckPermissionAsync，判断是否有此权限。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("   public class PermissionAuthorizationHandler : AuthorizationHandler<OperationAuthorizationRequirement>\n    {\n        private readonly IPermissionService _permissionService;\n\n        public PermissionAuthorizationHandler(IPermissionService permissionService)\n        {\n            _permissionService = permissionService;\n        }\n\n        protected override async Task HandleRequirementAsync(AuthorizationHandlerContext context, OperationAuthorizationRequirement requirement)\n        {\n            Claim userIdClaim = context.User?.FindFirst(_ => _.Type == ClaimTypes.NameIdentifier);\n            if (userIdClaim != null)\n            {\n                if (await _permissionService.CheckPermissionAsync(requirement.Name))\n                {\n                    context.Succeed(requirement);\n                }\n            }\n        }\n    }\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br")])]),e("p",[n._v("另外我们还需要把这个Handler注入到我们的DI中，在ConfigureServices中替换如下服务")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("services.AddScoped<IAuthorizationHandler, PermissionAuthorizationHandler>();\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[n._v("其中的PermssionAppService中的实现,检查当前登录的用户的是否有此权限")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("public async Task<bool> CheckPermissionAsync(string permission)\n{\n    long[] groups = _currentUser.Groups;\n\n    LinPermission linPermission = await _permissionRepository.Where(r => r.Name == permission).FirstAsync();\n\n    bool existPermission = await _groupPermissionRepository.Select\n        .AnyAsync(r => groups.Contains(r.GroupId) && r.PermissionId == linPermission.Id);\n\n    return existPermission;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])]),e("h3",{attrs:{id:"更多参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更多参考"}},[n._v("#")]),n._v(" 更多参考")]),n._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/RainingNight/p/introduce-basic-authentication-in-asp-net-core.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("ASP.NET Core 认证与授权[1]:初识认证"),e("OutboundLink")],1)])]),n._v(" "),e("h2",{attrs:{id:"开源地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开源地址"}},[n._v("#")]),n._v(" 开源地址")]),n._v(" "),e("ul",[e("li",[n._v("后端接口Gitee 链接 "),e("a",{attrs:{href:"https://gitee.com/igeekfan/lin-cms-dotnetcore",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://gitee.com/igeekfan/lin-cms-dotnetcore"),e("OutboundLink")],1)]),n._v(" "),e("li",[n._v("后端接口GitHub 链接 "),e("a",{attrs:{href:"https://github.com/luoyunchong/lin-cms-dotnetcore",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/luoyunchong/lin-cms-dotnetcore"),e("OutboundLink")],1)]),n._v(" "),e("li",[n._v("管理端UI "),e("a",{attrs:{href:"https://github.com/luoyunchong/lin-cms-vue",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/luoyunchong/lin-cms-vue"),e("OutboundLink")],1)]),n._v(" "),e("li",[n._v("用户端UI "),e("a",{attrs:{href:"https://github.com/luoyunchong/lin-cms-vvlog",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/luoyunchong/lin-cms-vvlog"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=a.exports}}]);