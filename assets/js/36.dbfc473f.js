(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{682:function(e,s,a){"use strict";a.r(s);var n=a(10),t=Object(n.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"serilog指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serilog指南"}},[e._v("#")]),e._v(" Serilog指南")]),e._v(" "),a("ul",[a("li",[e._v("原文："),a("a",{attrs:{href:"https://blog.datalust.co/serilog-tutorial/#3eventsandlevels",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://blog.datalust.co/serilog-tutorial/#3eventsandlevels"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("github: "),a("a",{attrs:{href:"https://github.com/serilog/serilog",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/serilog/serilog"),a("OutboundLink")],1)])]),e._v(" "),a("h3",{attrs:{id:"_1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[e._v("#")]),e._v(" 1.概述")]),e._v(" "),a("p",[e._v("serilog是一个完全结构化事件的简单.NET日志记录")]),e._v(" "),a("p",[a("code",[e._v("fully-structured")]),e._v(",结构化")]),e._v(" "),a("ul",[a("li",[e._v("支持多种Provider，可将日志推送到不同的中间件，如文件，数据库(mysql,sql server,mariadb等)")])]),e._v(" "),a("h3",{attrs:{id:"_2-hello-serilog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-hello-serilog"}},[e._v("#")]),e._v(" 2. Hello, Serilog!")]),e._v(" "),a("p",[e._v("让我们从最简单的开始，跟随以下教程，你需要创建一个Console项目，适用于.NET FrameWork 和.NET Core。")]),e._v(" "),a("p",[a("code",[e._v("Serilog")]),e._v(" 通过 "),a("code",[e._v("NuGet")]),e._v("  分发包. 该项目以Serilog包为核心组织，配合许多 "),a("code",[e._v("sinks")]),e._v("（接收器） (超过上百!), 用于将事件写入终端,文件，数据库，日志服务器的插件中。")]),e._v(" "),a("p",[e._v("我们从 "),a("code",[e._v("Serilog")]),e._v(" 和 "),a("code",[e._v("Serilog.Sinks.Console")]),e._v("开始, 稍后再讨论其他选项:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Install-Package Serilog\nInstall-Package Serilog.Sinks.Console\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("以下是世界上最简单的 Serilog 配置：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('using Serilog;\n\nclass Program\n{\n    public static void Main(string[] args)\n    {\n        using (var log = new LoggerConfiguration()\n            .WriteTo.Console()\n            .CreateLogger())\n        {\n            log.Information("Hello, Serilog!");\n            log.Warning("Goodbye, Serilog.");\n        }\n    }\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br")])]),a("p",[e._v("明确以下几点")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("LoggerConfiguration")]),e._v(" 类提供 了一个fluent 接口 构建一个日志管道")]),e._v(" "),a("li",[a("code",[e._v("WriteTo.Console()")]),e._v(" 将一个控制台接收器 添加到管道中")]),e._v(" "),a("li",[a("code",[e._v("CreateLogger()")]),e._v(" 集合构建后会 返回一个 "),a("code",[e._v("Logger")]),e._v(" 对象, 他实现了 "),a("code",[e._v("ILogger")]),e._v("的接口")]),e._v(" "),a("li",[a("code",[e._v("Logger")]),e._v(" 接口继承 "),a("code",[e._v("IDisposable")]),e._v(", 所以我们使用 "),a("code",[e._v("using")]),e._v(" 块")]),e._v(" "),a("li",[e._v("最后, "),a("code",[e._v("log.Information()")]),e._v(" 和 "),a("code",[e._v("log.Warning()")]),e._v(" 通过logger记录所有的发出的事件")])]),e._v(" "),a("p",[e._v("运行程序")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/api/personal/file/261B46CA8E7E474D889CC2D6312BA39E?method=download&shareKey=b47ca475a270339f81b8af4ba28a1954",alt:"image"}})]),e._v(" "),a("p",[e._v("现在最迫切的问题是: 在我们的应用程序中，其他类如何得到这个Log对象? 除了通过参数进行传递, 有两种可能性")]),e._v(" "),a("ul",[a("li",[e._v("如果您使用的是 "),a("code",[e._v("IoC")]),e._v(" 容器, 你 可以使用组件接收"),a("code",[e._v("ILogger")]),e._v("对象，即通过 "),a("code",[e._v("dependency injection")]),e._v("(依赖注入)"),a("code",[e._v("ILogger")]),e._v("的方式使用. 像集成 "),a("a",{attrs:{href:"https://github.com/nblumhardt/autofac-serilog-integration",target:"_blank",rel:"noopener noreferrer"}},[e._v("AutofacSerilogIntegration"),a("OutboundLink")],1),e._v("等包即可。")])]),e._v(" "),a("p",[e._v("或者,你可以把Logger存储到一个已知的位置中;为此 "),a("code",[e._v("Serilog")]),e._v("有一个静态日志类")]),e._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[e._v("Log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Logger "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[e._v("LoggerConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("WriteTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("CreateLogger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\nLog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Information")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hello again, Serilog!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\nLog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("CloseAndFlush")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[a("code",[e._v("Log")]),e._v(" 类提供了与"),a("code",[e._v("ILogger")]),e._v("接口相同的所有方法.用于替换使用using 块,我们可以调用 "),a("code",[e._v("Log.CloseAndFlush()")]),e._v("，重置"),a("code",[e._v("Serilog.Log.Logger")]),e._v(",并释放原有的资源")]),e._v(" "),a("blockquote",[a("p",[e._v("你可能选择基于"),a("code",[e._v("ILogger")]),e._v("的注入方式使用，或使用静态Log类 -这种选择是基于个人口味和爱好的问题. 为了保持简单 我们将在此教程中使用静态日志类。")])]),e._v(" "),a("h3",{attrs:{id:"_3-事件和级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-事件和级别"}},[e._v("#")]),e._v(" 3. 事件和级别")]),e._v(" "),a("p",[e._v("如果使用过"),a("code",[e._v("log4net")]),e._v("等较旧的库，在使"),a("code",[e._v("Serilog")]),e._v("时，您需要在思维方式上做的最大改变是从日志事件而不是日志消息的角度来思考。活动由以下部分组成：")]),e._v(" "),a("ul",[a("li",[e._v("记录事件发生时的时间戳")]),e._v(" "),a("li",[e._v("描述何时应捕获事件的级别")]),e._v(" "),a("li",[e._v("记录事件所代表内容的消息")]),e._v(" "),a("li",[e._v("描述事件的命名属性")]),e._v(" "),a("li",[e._v("可能是一个异常对象")])]),e._v(" "),a("p",[e._v("您可以将日志事件格式化为控制台的可读文本，正如我们在第一个示例中看到的：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("11:33:01 [INF] Hello, Serilog!\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("或者，您可以将同一事件格式化为JSON，并将其发送到远程日志服务器：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{"@t":"2017-11-20T11:33:01.22138","@m":"Hello, Serilog!"}`\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("在幕后，应用程序中的日志语句创建LogEvent对象，而连接到管道的接收器则确定如何记录它们。")]),e._v(" "),a("h3",{attrs:{id:"logging-levels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logging-levels"}},[e._v("#")]),e._v(" Logging levels")]),e._v(" "),a("p",[a("code",[e._v("Serilog")]),e._v("速度很快，但始终构造和记录详细的日志事件可能会浪费CPU、磁盘和网络资源。为了管理这一点，"),a("code",[e._v("Serilog")]),e._v("事件被分配了调试、信息、警告和错误等级别。每个支持的级别都有一个"),a("code",[e._v("Log.*（）")]),e._v("方法。")]),e._v(" "),a("p",[e._v("在开发过程中，可能会打开调试级别事件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Log.Logger = new LoggerConfiguration()\n    .MinimumLevel.Debug() // <- Set the minimum level\n    .WriteTo.Console()\n    .CreateLogger();\n\n// In a tight loop...\nLog.Debug("Processing item {ItemNumber} of {ItemCount}", itemNumber, itemCount);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("在生产中，通常关闭调试事件并将最低级别设置为信息，以便只记录重要事件。阅读文档中有关"),a("code",[e._v("Serilog")]),e._v("级别的"),a("a",{attrs:{href:"https://github.com/serilog/serilog/wiki/Writing-Log-Events#log-event-levels",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多信息"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h3",{attrs:{id:"_4-发送和收集结构化数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-发送和收集结构化数据"}},[e._v("#")]),e._v(" 4. 发送和收集结构化数据")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var itemNumber = 10;\nvar itemCount = 999;\nLog.Debug("Processing item {ItemNumber} of {ItemCount}", itemNumber, itemCount);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("您注意到日志消息中的"),a("code",[e._v("{ItemNumber}")]),e._v("之类的命名占位符了吗？这不是C#插值字符串：Log.*（）方法接受消息模板，这是.NET格式字符串的一种变体，除了通常的{0}位置字符串外，还支持{Named}占位符。")]),e._v(" "),a("p",[e._v("这似乎有点奇怪，直到您意识到，通过这样做，"),a("code",[e._v("Serilog")]),e._v("可以将消息的一部分作为一级属性与人性化文本一起捕获：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n    "@t": "2017-11-20T11:33:01.22138",\n    "@l": "Debug",\n    "@m": "Processing item 10 of 999",\n    "ItemNumber": 10,\n    "ItemCount": 999\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("我们为什么要这样做？由于日志事件附带了一些有趣的字段作为属性，因此我们可以立即使用简单的过滤器（如"),a("code",[e._v("ItemNumber>900")]),e._v("）来查找事件，而不必通过正则表达式从消息中提取信息。")]),e._v(" "),a("p",[e._v("更进一步，我们可以使用"),a("code",[e._v("@structure")]),e._v("捕获操作符不仅获取平面属性值，还获取完整的对象：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var user = new { Name = "Nick", Id = "nblumhardt" };\nLog.Information("Logged on user {@User}", user);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("在这里，用户对象被捕获到生成的JSON中，因此我们可以使用诸如"),a("code",[e._v("user.Id='nblumhardt'")]),e._v("之类的查询来查找事件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n    "@t": "2017-11-20T11:33:01.22138",\n    "@m": "Logged on user {\\"Name\\": \\"Nick\\", \\"Id\\": \\"nblumhardt\\"}",\n    "User": {"Name": "Nick", "Id": "nblumhardt"}\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("生产监控和调试已经是一项艰巨、耗时且经常充满压力的任务：通常这些相关数据触手可及，"),a("code",[e._v("Serilog")]),e._v("消除了与操作相关 活动中最大的分歧之一。")]),e._v(" "),a("blockquote",[a("p",[e._v("提示：从"),a("code",[e._v("VisualStudioMarketplace")]),e._v("安装了不起的"),a("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=Suchiman.SerilogAnalyzer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Serilog分析器"),a("OutboundLink")],1),e._v("，以便在键入时检查消息模板语法")])]),e._v(" "),a("p",[e._v("这实际上会产生多大的差异，很大程度上取决于您如何从"),a("code",[e._v("Serilog")]),e._v("收集事件。传统上，日志事件进入文本文件并使用"),a("code",[e._v("grep")]),e._v("进行搜索。"),a("code",[e._v("Serilog")]),e._v("也可以记录文本文件，但您不能在记事本中执行"),a("code",[e._v("ItemNumber>900")]),e._v("，因此您需要评估更强大的工具来实现这一点。")]),e._v(" "),a("h2",{attrs:{id:"将事件写入json日志文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将事件写入json日志文件"}},[e._v("#")]),e._v(" 将事件写入JSON日志文件")]),e._v(" "),a("p",[e._v("如果您的需求很简单，可以将"),a("code",[e._v("JSON")]),e._v("写入日志文件，并使用"),a("code",[e._v("JSON")]),e._v("感知工具直接查询文件。"),a("code",[e._v("Serilog")]),e._v("的文件接收器和紧凑的"),a("code",[e._v("JSON")]),e._v("格式化程序使第一部分变得简单。让我们尝试另一个安装了以下软件包的小型控制台应用程序：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Install-Package Serilog;\nInstall-Package Serilog.Sinks.File\nInstall-Package Serilog.Formatting.Compact\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("在Main（）方法中：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Log.Logger = new LoggerConfiguration()\n    .MinimumLevel.Debug()\n    .WriteTo.File(new CompactJsonFormatter(), "log.clef")\n    .CreateLogger();\n\nvar itemCount = 99;\nfor (var itemNumber = 0; itemNumber < itemCount; ++itemNumber)\n    Log.Debug("Processing item {ItemNumber} of {ItemCount}", itemNumber, itemCount);\n\nLog.CloseAndFlush();\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("运行此应用程序将使用"),a("code",[e._v("Serilog")]),e._v("的压缩日志事件格式在"),a("code",[e._v("log.clef")]),e._v("中生成一个"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/JSON_streaming",target:"_blank",rel:"noopener noreferrer"}},[e._v("新行分隔的"),a("code",[e._v("JSON")]),e._v("流"),a("OutboundLink")],1),e._v("。（如果没有"),a("code",[e._v("CompactJsonFormatter")]),e._v("，我们将创建一个简单的平面日志文件。）")]),e._v(" "),a("p",[e._v("如果在文本编辑器中打开该文件，您将看到JSON事件，如我们上面使用的示例。")]),e._v(" "),a("h3",{attrs:{id:"将事件写入日志服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将事件写入日志服务器"}},[e._v("#")]),e._v(" 将事件写入日志服务器")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Install-Package Serilog.Sinks.Seq\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Log.Logger = new LoggerConfiguration()\n    .MinimumLevel.Debug()\n    .WriteTo.Seq("http://localhost:5341")\n    .CreateLogger();\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h3",{attrs:{id:"_5-标记用于筛选和关联的事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-标记用于筛选和关联的事件"}},[e._v("#")]),e._v(" 5.标记用于筛选和关联的事件")]),e._v(" "),a("h4",{attrs:{id:"增加固定属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增加固定属性"}},[e._v("#")]),e._v(" 增加固定属性")]),e._v(" "),a("p",[e._v("最简单的充实方法是向源自日志管道的所有事件添加固定属性值。这是使用记录器配置中的"),a("code",[e._v("Enrich.WithProperty()")]),e._v("完成的：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Log.Logger = new LoggerConfiguration()\n    .Enrich.WithProperty("Application", "Demo")\n    .WriteTo.Seq("http://localhost:5341")\n    .CreateLogger();\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("在"),a("code",[e._v("LogEvents")]),e._v("上，通过扩展添加的属性与源自消息模板的属性相同：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n    "@t": "2017-11-20T11:33:01.22138",\n    "@l": "Debug",\n    "@m": "Processing item 10 of 999",\n    "ItemNumber": 10,\n    "ItemCount": 999,\n    "Application": "Demo"\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("这种策略有助于放大集中日志流中的特定日志源；以这种方式添加的属性包括应用程序、环境和版本等内容。")]),e._v(" "),a("h2",{attrs:{id:"增加事件或记录器特定属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增加事件或记录器特定属性"}},[e._v("#")]),e._v(" 增加事件或记录器特定属性")]),e._v(" "),a("p",[e._v("通过创建和使用上下文记录器，可以将属性添加到一个或几个相关事件中，而不是使用相同的值丰富所有事件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var orderLog = Log.ForContext("OrderId", order.Id);\norderLog.Information("Looking up product codes");\n// ...\norderLog.Information("Product lookup took {Elapsed} ms", elapsed.TotalMilliseconds);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("在这里，通过"),a("code",[e._v("orderLog")]),e._v("发出的两个事件都将附加"),a("code",[e._v("OrderId")]),e._v("属性。")]),e._v(" "),a("p",[e._v("扩展是可添加的：如果"),a("code",[e._v("Application")]),e._v("属性设置在管道级别，则上面的第二个事件将携带经过（来自消息）、"),a("code",[e._v("OrderId")]),e._v("（来自上下文记录器）和"),a("code",[e._v("Application")]),e._v("（来自日志管道）。")]),e._v(" "),a("h3",{attrs:{id:"丰富源类型信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#丰富源类型信息"}},[e._v("#")]),e._v(" 丰富源类型信息")]),e._v(" "),a("p",[e._v("特定于记录器的充实的一个特例是如何用创建事件的类标记事件。")]),e._v(" "),a("p",[e._v("在名为"),a("code",[e._v("HomeController")]),e._v("的类中，使用以下方法创建特定于类型的记录器：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("private readonly ILogger _log = Log.ForContext<HomeController>();\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("通过"),a("code",[e._v("_log")]),e._v("发出的事件将携带值为"),a("code",[e._v("MyApp.Controller.HomeController")]),e._v("的"),a("code",[e._v("SourceContext")]),e._v("属性。")]),e._v(" "),a("h3",{attrs:{id:"丰富环境语境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#丰富环境语境"}},[e._v("#")]),e._v(" 丰富环境语境")]),e._v(" "),a("p",[e._v("为了丰富工作单元中引发的所有事件，"),a("code",[e._v("Serilog")]),e._v("提供了"),a("code",[e._v("LogContext")]),e._v("。首先需要在"),a("code",[e._v("LoggerConfiguration")]),e._v("级别使用"),a("code",[e._v("Enrich.FromLogContext()")]),e._v("启用此功能：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Log.Logger = new LoggerConfiguraition()\n     .Enrich.FromLogContext()\n     // ...\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[a("code",[e._v("LogContext")]),e._v("可以看作是（键、值）对的堆栈；当从日志上下文中丰富事件时，这些事件将作为属性添加到事件中。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('using (LogContext.PushProperty("MessageId", message.Id))\n{\n    Log.Debug("Dispatching message of type {MessageType}", message.GetType());\n    await handler.HandleAsync(message);\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[a("code",[e._v("LogContext")]),e._v("的有趣之处在于不需要传递任何信息。在示例代码中，"),a("code",[e._v("HandleAsync()")]),e._v("的实现以及它调用的任何其他方法都可以直接使用"),a("code",[e._v("Log")]),e._v("和"),a("code",[e._v("ILogger")]),e._v("、 "),a("code",[e._v("MessageId")]),e._v("属性将被提取并添加到后台。")]),e._v(" "),a("blockquote",[a("p",[e._v("提示："),a("code",[e._v("LogContext")]),e._v("是一个堆栈；推送到堆栈上的属性必须通过处理从"),a("code",[e._v("PushProperty()")]),e._v("返回的对象再次弹出-必须使用块。")])])])}),[],!1,null,null,null);s.default=t.exports}}]);