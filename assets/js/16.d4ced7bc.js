(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{662:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"net-编码的基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#net-编码的基础知识"}},[s._v("#")]),s._v(" .NET 编码的基础知识")]),s._v(" "),a("p",[s._v(".NET 编码的一些基本概念和分析")]),s._v(" "),a("h3",{attrs:{id:"简单的类型概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单的类型概念"}},[s._v("#")]),s._v(" 简单的类型概念")]),s._v(" "),a("ul",[a("li",[s._v("Hex （16进制）")]),s._v(" "),a("li",[s._v("byte 字节 范围是："),a("code",[s._v("0~255")]),s._v("，二进制下的范围就是"),a("code",[s._v("00000000~11111111")]),s._v("，相当于1字节。")]),s._v(" "),a("li",[s._v("byte[] 字节数组")]),s._v(" "),a("li",[s._v("bit 比特，只有2种状态：0，1")])]),s._v(" "),a("p",[a("strong",[s._v("1 字节 等于 8 比特")]),s._v(" 即"),a("strong",[s._v("1byte=8bit")])]),s._v(" "),a("p",[s._v("在c#中。Byte即byte，他是一个struct结构体，")]),s._v(" "),a("p",[s._v("b1等于b2.")]),s._v(" "),a("div",{staticClass:"language-cs line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")])]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")])]),s._v(" b1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//以0x开头 即16进制的写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")])]),s._v(" b2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nAssert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Equal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("错误的语法")]),s._v(" "),a("div",{staticClass:"language-cs line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")])]),s._v(" b3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("正确的语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("byte b3 = (byte)(b1 + b2);\n//或\nint b4 = b1 + b2;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("因为byte的相互运算太容易发生溢出，+ 加的重载 是int类型相加，所以结果是int类型")]),s._v(" "),a("h3",{attrs:{id:"encoding-utf8-getbytes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#encoding-utf8-getbytes"}},[s._v("#")]),s._v(" Encoding.UTF8.GetBytes")]),s._v(" "),a("p",[s._v("UTF8是统一的编码方式，它是一种变长的编码方式.它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('byte[] plaintext = Encoding.UTF8.GetBytes("0123456789");\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("能得到什么样的数据，"),a("strong",[s._v("48,49,50,51,52,53,54,55,56,57")]),s._v("。为什么？")]),s._v(" "),a("p",[s._v("搜ASCII码，我们就知道 "),a("code",[s._v("0")]),s._v("的ASCII码是 "),a("code",[s._v("48")])]),s._v(" "),a("p",[s._v("如果是字母呢。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('byte[] plaintext = Encoding.UTF8.GetBytes("ABCDabcd");\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("能得到什么样的数据，"),a("strong",[s._v("65,66,67,68,97,98,99,100")]),s._v("。为什么？还是因为ASCII码。UTF8当然是兼容ASCII码。")]),s._v(" "),a("p",[s._v("因为一个ASCII码，1个字节就能表示256个状态，所以英文字母，阿拉伯数字，标点符号都不在话，哪如果是中文呢。这里我们就拿UTF8编码来分析。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('byte[]   plaintext = Encoding.UTF8.GetBytes("中国");\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如下内容，长度为6，228，184，173 都是十进制。如果转成16进制呢。"),a("strong",[s._v("e4，b8，ad")]),s._v("，如果分不清十六进制，建议学一下，计算机系统基础。当然，说明一下，"),a("code",[s._v("a")]),s._v("代表"),a("code",[s._v("10")]),s._v("，"),a("code",[s._v("e")]),s._v("即代表"),a("code",[s._v("14")]),s._v(".即"),a("code",[s._v("14*16+4=228")]),s._v(".表示时不区分大小写，即用大写"),a("code",[s._v("A")]),s._v("，和小写"),a("code",[s._v("a")]),s._v("都能表示"),a("code",[s._v("10")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("列")]),s._v(" "),a("th",[s._v("十进制")]),s._v(" "),a("th",[s._v("十六进制")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("0")]),s._v(" "),a("td",[s._v("228")]),s._v(" "),a("td",[s._v("e4")])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("184")]),s._v(" "),a("td",[s._v("b8")])]),s._v(" "),a("tr",[a("td",[s._v("2")]),s._v(" "),a("td",[s._v("173")]),s._v(" "),a("td",[s._v("ad")])]),s._v(" "),a("tr",[a("td",[s._v("3")]),s._v(" "),a("td",[s._v("229")]),s._v(" "),a("td",[s._v("e5")])]),s._v(" "),a("tr",[a("td",[s._v("4")]),s._v(" "),a("td",[s._v("155")]),s._v(" "),a("td",[s._v("9b")])]),s._v(" "),a("tr",[a("td",[s._v("5")]),s._v(" "),a("td",[s._v("189")]),s._v(" "),a("td",[s._v("bd")])])])]),s._v(" "),a("p",[s._v("我们从网上搜下，可以发现 中国 的UTF-8编码： "),a("strong",[s._v("E4B8AD E59BBD")]),s._v(".说明通过"),a("code",[s._v("Encoding.UTF8.GetBytes")]),s._v("的结果肯定是对的。中文是用3或4个 Bytes存储的。")]),s._v(" "),a("h3",{attrs:{id:"_1-byte-转换hex-16进制字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-byte-转换hex-16进制字符串"}},[s._v("#")]),s._v(" 1.byte[] 转换hex(16进制字符串)")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("Encoding.UTF8.GetBytes")]),s._v("能得到数据的十进制的字节数组。")]),s._v(" "),a("li",[a("code",[s._v("BitConverter.ToString")]),s._v("支持将十进制的数据转换成16进制，中间以"),a("code",[s._v("-")]),s._v("分隔，所以需要将中间的"),a("code",[s._v("-")]),s._v(" "),a("code",[s._v("Replace")]),s._v("掉")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public string ByteToHex(string str)\n{\n    byte[] bytes = Encoding.UTF8.GetBytes(str);\n    string hex = BitConverter.ToString(bytes, 0).Replace("-", string.Empty);\n    return hex;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("code",[s._v("hex")]),s._v("得到 的数据就是 "),a("code",[s._v("E4B8ADE59BBD")])]),s._v(" "),a("div",{staticClass:"language-cs line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" hex"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ByteToHex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"中国"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-byte-转换hex-stringbuilder方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-byte-转换hex-stringbuilder方式"}},[s._v("#")]),s._v(" 2.byte[] 转换hex:StringBuilder方式")]),s._v(" "),a("p",[s._v("如下内容为什么能将数据转成16进制.")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("Encoding.UTF8.GetBytes")]),s._v("能得到数据的十进制的字节数组。")]),s._v(" "),a("li",[s._v("利用c#中的 "),a("strong",[a("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/dotnet/standard/base-types/composite-formatting",target:"_blank",rel:"noopener noreferrer"}},[s._v("复合格式化特性"),a("OutboundLink")],1)]),s._v(" {0:X2}自动转换成16进制。同样内容支持Console.WriteLine等")])]),s._v(" "),a("div",{staticClass:"language-cs line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ByteToHex2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Encoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UTF8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuilder")]),s._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("foreach")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")])]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//{0:x2} 小写")]),s._v("\n        ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("AppendFormat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{0:X2}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"hex-16进制字符串-转换-byte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hex-16进制字符串-转换-byte"}},[s._v("#")]),s._v(" hex(16进制字符串)转换 byte[]")]),s._v(" "),a("ol",[a("li",[s._v("一个循环将16进制转换成10进制。")])]),s._v(" "),a("div",{staticClass:"language-cs line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HexToByte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" hex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" inputByteArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("hex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" inputByteArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ToInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        inputByteArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" inputByteArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("调用如下内容，bytes[]中的长度为6，数据是228，184，173、229，155，189。即上文中的中国的十进制byte数组")]),s._v(" "),a("div",{staticClass:"language-cs line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" hexChinese "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E4B8ADE59BBD"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//中国的UTF8编码。十六进制。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HexToByte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hexChinese"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Encoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UTF8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// `中国`")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);