import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{c,a as n,b as e,e as s,d as t,r as i,o as p}from"./app.a4b121e2.js";const l={},r=n("h1",{id:"net-sqlite-\u5982\u4F55\u652F\u6301\u52A0\u5BC6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#net-sqlite-\u5982\u4F55\u652F\u6301\u52A0\u5BC6","aria-hidden":"true"},"#"),s(" .NET+Sqlite \u5982\u4F55\u652F\u6301\u52A0\u5BC6")],-1),d=n("h2",{id:"\u76F8\u5173\u6587\u7AE0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u76F8\u5173\u6587\u7AE0","aria-hidden":"true"},"#"),s(" \u76F8\u5173\u6587\u7AE0")],-1),u={href:"https://www.cnblogs.com/igeekfan/p/freesql-sqlitecore-SQLCipher.html",target:"_blank",rel:"noopener noreferrer"},k=s("FreeSql.Provider.SqliteCore \u5982\u4F55\u52A0\u5BC6"),v=n("h2",{id:"sqlite",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sqlite","aria-hidden":"true"},"#"),s(" Sqlite")],-1),m=n("p",null,[n("code",null,"SQLite"),s(" \u6765\u6E90\u4E8E\u516C\u5171\u9886\u57DF "),n("code",null,"SQLite Is Public Domain"),s("\u3001 \u786E\u4FDD\u4EE3\u7801\u4E0D\u4F1A\u53D7\u5230\u4EFB\u4F55\u4E13\u6709\u6216\u8BB8\u53EF\u5185\u5BB9\u7684\u6C61\u67D3\uFF0C\u6CA1\u6709\u4EFB\u4F55\u6765\u81EA\u4E92\u8054\u7F51\u4E0A\u7684\u672A\u77E5\u6765\u6E90\u590D\u5236\u3002\u5373\u5168\u662F\u539F\u521B\u7684\u3002")],-1),b=s("\u867D\u7136\u662F\u514D\u8D39\u7684\uFF0C\u65E0\u9700\u8BB8\u53EF\u8BC1\uFF0C\u53EF\u7528\u4E8E\u4EFB\u4F55\u76EE\u7684\uFF0C\u4F46\u5982\u679C\u4F60\u7684\u516C\u53F8\u5FC5\u987B\u8981\u4E00\u4E2A\u8BB8\u53EF\u8BC1\uFF0C\u4F60\u4E5F\u80FD\u7533\u8BF7\u6388\u6743"),h={href:"https://sqlite.org/purchase/license",target:"_blank",rel:"noopener noreferrer"},g=s("https://sqlite.org/purchase/license"),S=s("."),_=s("\u4F46\u4E0D\u652F\u6301"),q=n("strong",null,"\u52A0\u5BC6",-1),w=s("\u3002\u5982\u679C\u60F3\u652F\u6301\u767B\u5F55\u52A0\u5BC6\uFF0C\u9700\u8981\u53E6\u5916\u7684\u6269\u5C55"),f=n("strong",null,"SQLite \u52A0\u5BC6\u6269\u5C55(SQLite Encryption Extension,)",-1),y=s("\uFF0C\u5177\u6709\u8BFB\u53D6/\u5199\u5165 AES \u52A0\u5BC6\u6570\u636E\u5E93\u7684\u9644\u52A0\u529F\u80FD\u3002\u5177\u4F53\u6388\u6743\u53EF\u53C2\u8003 "),x={href:"https://www.sqlite.org/prosupport.html",target:"_blank",rel:"noopener noreferrer"},C=s("https://www.sqlite.org/prosupport.html"),L=t(`<h2 id="sqlite-\u52A0\u5BC6" tabindex="-1"><a class="header-anchor" href="#sqlite-\u52A0\u5BC6" aria-hidden="true">#</a> Sqlite \u52A0\u5BC6</h2><p>\u4E00\u76F4\u4EE5\u6765\uFF0C<code>FreeSql</code>\u5F00\u53D1\u7FA4\u4E2D\uFF0C\u603B\u4F1A\u6709\u4E00\u4E9B\u5F00\u53D1\u8005\u6765\u8BE2\u95EE<code>Sqlite</code>\u52A0\u5BC6\u7684\u95EE\u9898\uFF0C\u4E8B\u5B9E\u4E0A\uFF0C\u5B98\u65B9\u63D0\u4F9B\u7684 Sqlite \u52A0\u5BC6\u529F\u80FD\u662F\u6536\u8D39\u7684\u3002\u5F53\u8FDE\u63A5\u4E32\u4E0A\u4F7F\u7528<code>Password</code>\u65F6\uFF0C\u4F1A\u63D0\u793A\u6388\u6743\u95EE\u9898\u3002 \u5982\u679C\u5E95\u5C42\u4F9D\u8D56\u4E8E<code>System.Data.SQLite.Core</code>\uFF0C</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Could not load file or assembly &#39;System.Data.SQLite.SEE.License,
Version=1.0.115.5, Culture=neutral, PublicKeyToken=433d9874d0bb98c5,
processorArchitecture=MSIL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5E95\u5C42\u4F9D\u8D56\u4E8E<code>Microsoft.Data.Sqlite</code> \u4E5F\u4F1A\u63D0\u793A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>You specified a password in the connection string, but the native SQLite
library &#39;e_sqlite3&#39; doesn&#39;t support encryption.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="system-data-sqlite-core" tabindex="-1"><a class="header-anchor" href="#system-data-sqlite-core" aria-hidden="true">#</a> System.Data.SQLite.Core</h2><p>\u521B\u5EFA\u4E00\u4E2A\u63A7\u5236\u53F0\u9879\u76EE,\u8D77\u540D <code>OvOv.SqliteSystemCore</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet new console -n OvOv.SqliteSystemCore
<span class="token builtin class-name">cd</span> OvOv.SqliteSystemCore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B89\u88C5\u5305</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package System.Data.SQLite.Core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F7F\u7528<code>SQLiteConnection</code>\u521B\u5EFA\u4E00\u4E2A\u8FDE\u63A5\uFF0C\u4F7F\u7528 Password \u6307\u5B9A\u5BC6\u7801</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>SQLite</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> baseConnectionString <span class="token operator">=</span> <span class="token string">&quot;Data Source=local.db&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> connectionString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SQLiteConnectionStringBuilder</span><span class="token punctuation">(</span>baseConnectionString<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Password <span class="token operator">=</span> <span class="token string">&quot;123qwe&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">using</span> <span class="token class-name">SQLiteConnection<span class="token punctuation">?</span></span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SQLiteConnection</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    connection<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u9879\u76EE</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5C31\u4F1A\u51FA\u73B0\u5982\u4E0B\u9519\u8BEF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>System.IO.FileNotFoundException:\u201CCould not load file or assembly
&#39;System.Data.SQLite.SEE.License, Version=1.0.115.5, Culture=neutral, PublicKeyToken=433d9874d0bb98c5, processorArchitecture=MSIL&#39;.
\u7CFB\u7EDF\u627E\u4E0D\u5230\u6307\u5B9A\u7684\u6587\u4EF6\u3002\u201D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="microsoft-data-sqlite" tabindex="-1"><a class="header-anchor" href="#microsoft-data-sqlite" aria-hidden="true">#</a> Microsoft.Data.Sqlite</h2><p>\u521B\u5EFA\u4E00\u4E2A\u63A7\u5236\u53F0\u9879\u76EE,\u8D77\u540D <code>OvOv.SqliteMicrosoft</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet new console -n OvOv.SqliteMicrosoft
<span class="token builtin class-name">cd</span> OvOv.SqliteMicrosoft
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B89\u88C5\u5305</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package Microsoft.Data.Sqlite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F7F\u7528<code>SqliteConnection</code>\u521B\u5EFA\u4E00\u4E2A\u8FDE\u63A5\uFF0C\u4F7F\u7528 Password \u6307\u5B9A\u5BC6\u7801</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Sqlite</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> baseConnectionString <span class="token operator">=</span> <span class="token string">&quot;Data Source=local.db&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> connectionString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqliteConnectionStringBuilder</span><span class="token punctuation">(</span>baseConnectionString<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Mode <span class="token operator">=</span> SqliteOpenMode<span class="token punctuation">.</span>ReadWriteCreate<span class="token punctuation">,</span>
        Password <span class="token operator">=</span> <span class="token string">&quot;123qwe&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">using</span> <span class="token class-name">SqliteConnection<span class="token punctuation">?</span></span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqliteConnection</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    connection<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u9879\u76EE</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5C31\u4F1A\u51FA\u73B0\u5982\u4E0B\u9519\u8BEF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Unhandled exception. System.InvalidOperationException: You specified a password in the connection string,
but the native SQLite library
&#39;e_sqlite3&#39; doesn&#39;t support encryption. at Microsoft.Data.Sqlite.SqliteConnection.Open()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u5FAE\u8F6F\u5DF2\u7ECF\u63D0\u4F9B\u4E86\u52A0\u5BC6\u7684\u65B9\u6848\u3002</p>`,28),P={href:"https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/encryption?tabs=netcore-cli",target:"_blank",rel:"noopener noreferrer"},O=s("https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/encryption?tabs=netcore-cli"),D=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet remove package Microsoft.Data.Sqlite
dotnet <span class="token function">add</span> package Microsoft.Data.Sqlite.Core
dotnet <span class="token function">add</span> package SQLitePCLRaw.bundle_e_sqlcipher
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u65B0\u8FD0\u884C\u9879\u76EE \uFF0C\u5C31\u4F1A\u53D1\u73B0\uFF0C\u4ED6\u6B63\u5E38\u6267\u884C\u3002\u6CA1\u6709\u4EFB\u4F55\u62A5\u9519\u3002</p>`,2),Q=s("\u6709\u5173\u4F7F\u7528\u4E0D\u540C\u7684\u672C\u673A\u5E93\u8FDB\u884C\u52A0\u5BC6\u7684\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605"),M={href:"https://docs.microsoft.com/zh-cn/dotnet/standard/data/sqlite/custom-versions?tabs=netcore-cli",target:"_blank",rel:"noopener noreferrer"},E=s("\u81EA\u5B9A\u4E49 SQLite \u7248\u672C"),T=s("\u3002"),N=t('<p>\u6211\u4EEC\u4ECE \u81EA\u5B9A\u4E49 SQLite \u7248\u672C\u4E0A\u53EF\u4EE5\u770B\u5230\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u4E3B <code>Microsoft.Data.Sqlite</code> \u5305\u5F15\u5165 <code>SQLitePCLRaw.bundle_e_sqlite3</code>\u3002 \u82E5\u8981\u4F7F\u7528\u4E0D\u540C\u7684\u6346\u7ED1\uFF0C\u8BF7\u6539\u4E3A\u5B89\u88C5 <code>Microsoft.Data.Sqlite.Core</code> \u5305\u4EE5\u53CA\u8981\u4F7F\u7528\u7684\u6346\u7ED1\u5305\u3002</p><h4 id="sqlitepclraw-bundle-e-sqlcipher" tabindex="-1"><a class="header-anchor" href="#sqlitepclraw-bundle-e-sqlcipher" aria-hidden="true">#</a> <code>SQLitePCLRaw.bundle_e_sqlcipher</code></h4><p>\u63D0\u4F9B SQLCipher \u7684<strong>\u975E\u5B98\u65B9\u5F00\u653E\u6E90\u4EE3\u7801\u5185\u90E8\u7248\u672C</strong>\u3002\u6B64\u7248\u672C\u652F\u6301<strong>\u52A0\u5BC6</strong>\u3002</p>',4),A={id:"ado-net-\u4FEE\u6539-sqlite-\u5BC6\u7801",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#ado-net-\u4FEE\u6539-sqlite-\u5BC6\u7801","aria-hidden":"true"},"#",-1),V=s(),B={href:"http://ADO.NET",target:"_blank",rel:"noopener noreferrer"},R=s("ADO.NET"),F=s(" \u4FEE\u6539 Sqlite \u5BC6\u7801"),z=t(`<div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">UpdatePassword</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> oldPassword<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> newPassword<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> baseConnectionString <span class="token operator">=</span> <span class="token string">&quot;Data Source=local.db&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> connectionString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqliteConnectionStringBuilder</span><span class="token punctuation">(</span>baseConnectionString<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Mode <span class="token operator">=</span> SqliteOpenMode<span class="token punctuation">.</span>ReadWriteCreate<span class="token punctuation">,</span>
        Password <span class="token operator">=</span> oldPassword
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqliteConnection</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        connection<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> command <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">CreateCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            command<span class="token punctuation">.</span>CommandText <span class="token operator">=</span> <span class="token string">&quot;SELECT quote($newPassword);&quot;</span><span class="token punctuation">;</span>
            command<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span><span class="token function">AddWithValue</span><span class="token punctuation">(</span><span class="token string">&quot;$newPassword&quot;</span><span class="token punctuation">,</span> newPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> quotedNewPassword <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">ExecuteScalar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name"><span class="token keyword">string</span></span><span class="token punctuation">;</span>

            command<span class="token punctuation">.</span>CommandText <span class="token operator">=</span> <span class="token string">&quot;PRAGMA rekey = &quot;</span> <span class="token operator">+</span> quotedNewPassword<span class="token punctuation">;</span>
            command<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> x <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">ExecuteNonQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">string</span></span> oldPassword <span class="token operator">=</span> <span class="token string">&quot;123qwe&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> newPassword <span class="token operator">=</span> <span class="token string">&quot;abcd&quot;</span><span class="token punctuation">;</span>
<span class="token function">UpdatePassword</span><span class="token punctuation">(</span>oldPassword<span class="token punctuation">,</span> newPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5B8C\u6574\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4EE3\u7801" aria-hidden="true">#</a> \u5B8C\u6574\u4EE3\u7801</h4>`,2),U={href:"https://github.com/luoyunchong/dotnetcore-examples/blob/master/Database-Drivers/OvOv.SqliteMicrosoftCore/Program.cs",target:"_blank",rel:"noopener noreferrer"},W=s("https://github.com/luoyunchong/dotnetcore-examples/blob/master/Database-Drivers/OvOv.SqliteMicrosoftCore/Program.cs");function K(Y,$){const a=i("ExternalLinkIcon");return p(),c("div",null,[r,d,n("ul",null,[n("li",null,[n("a",u,[k,e(a)])])]),v,m,n("p",null,[b,n("a",h,[g,e(a)]),S]),n("p",null,[_,q,w,f,y,n("a",x,[C,e(a)])]),L,n("ul",null,[n("li",null,[n("a",P,[O,e(a)])])]),D,n("p",null,[Q,n("a",M,[E,e(a)]),T]),N,n("h3",A,[I,V,n("a",B,[R,e(a)]),F]),z,n("ul",null,[n("li",null,[n("a",U,[W,e(a)])])])])}var H=o(l,[["render",K],["__file","net-sqlite-encryption.html.vue"]]);export{H as default};
